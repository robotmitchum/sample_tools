# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'st_tool.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_st_tool_mw(object):
    def setupUi(self, st_tool_mw):
        st_tool_mw.setObjectName("st_tool_mw")
        st_tool_mw.resize(640, 600)
        st_tool_mw.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.centralwidget = QtWidgets.QWidget(st_tool_mw)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.files_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.files_title_l.sizePolicy().hasHeightForWidth())
        self.files_title_l.setSizePolicy(sizePolicy)
        self.files_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.files_title_l.setStyleSheet("background-color: rgb(127, 63, 127);\n"
"color: rgb(255, 255, 255);")
        self.files_title_l.setObjectName("files_title_l")
        self.verticalLayout.addWidget(self.files_title_l)
        self.files_lyt = QtWidgets.QHBoxLayout()
        self.files_lyt.setObjectName("files_lyt")
        self.files_lw = QtWidgets.QListWidget(self.centralwidget)
        self.files_lw.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.files_lw.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.files_lw.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.files_lw.setObjectName("files_lw")
        self.files_lyt.addWidget(self.files_lw)
        self.set_files_tb = QtWidgets.QToolButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.set_files_tb.setFont(font)
        self.set_files_tb.setObjectName("set_files_tb")
        self.files_lyt.addWidget(self.set_files_tb)
        self.verticalLayout.addLayout(self.files_lyt)
        self.options_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.options_title_l.sizePolicy().hasHeightForWidth())
        self.options_title_l.setSizePolicy(sizePolicy)
        self.options_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.options_title_l.setStyleSheet("background-color: rgb(127, 63, 127);\n"
"color: rgb(255, 255, 255);")
        self.options_title_l.setObjectName("options_title_l")
        self.verticalLayout.addWidget(self.options_title_l)
        self.st_mode_lyt = QtWidgets.QHBoxLayout()
        self.st_mode_lyt.setObjectName("st_mode_lyt")
        self.mode_l = QtWidgets.QLabel(self.centralwidget)
        self.mode_l.setObjectName("mode_l")
        self.st_mode_lyt.addWidget(self.mode_l)
        self.st_mode_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.st_mode_cmb.sizePolicy().hasHeightForWidth())
        self.st_mode_cmb.setSizePolicy(sizePolicy)
        self.st_mode_cmb.setFrame(False)
        self.st_mode_cmb.setObjectName("st_mode_cmb")
        self.st_mode_cmb.addItem("")
        self.st_mode_cmb.addItem("")
        self.st_mode_cmb.addItem("")
        self.st_mode_cmb.addItem("")
        self.st_mode_lyt.addWidget(self.st_mode_cmb)
        self.delay_l = QtWidgets.QLabel(self.centralwidget)
        self.delay_l.setObjectName("delay_l")
        self.st_mode_lyt.addWidget(self.delay_l)
        self.delay_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.delay_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.delay_dsb.setFrame(False)
        self.delay_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.delay_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.delay_dsb.setMaximum(30.0)
        self.delay_dsb.setProperty("value", 6.0)
        self.delay_dsb.setObjectName("delay_dsb")
        self.st_mode_lyt.addWidget(self.delay_dsb)
        self.seed_l = QtWidgets.QLabel(self.centralwidget)
        self.seed_l.setEnabled(False)
        self.seed_l.setObjectName("seed_l")
        self.st_mode_lyt.addWidget(self.seed_l)
        self.seed_sb = QtWidgets.QSpinBox(self.centralwidget)
        self.seed_sb.setEnabled(False)
        self.seed_sb.setMinimumSize(QtCore.QSize(64, 0))
        self.seed_sb.setFrame(False)
        self.seed_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.seed_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.seed_sb.setMinimum(-1)
        self.seed_sb.setMaximum(99999)
        self.seed_sb.setProperty("value", 0)
        self.seed_sb.setObjectName("seed_sb")
        self.st_mode_lyt.addWidget(self.seed_sb)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.st_mode_lyt.addItem(spacerItem)
        self.wet_l = QtWidgets.QLabel(self.centralwidget)
        self.wet_l.setEnabled(False)
        self.wet_l.setObjectName("wet_l")
        self.st_mode_lyt.addWidget(self.wet_l)
        self.wet_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.wet_dsb.setEnabled(False)
        self.wet_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.wet_dsb.setFrame(False)
        self.wet_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.wet_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.wet_dsb.setDecimals(3)
        self.wet_dsb.setMaximum(1.0)
        self.wet_dsb.setSingleStep(0.1)
        self.wet_dsb.setProperty("value", 1.0)
        self.wet_dsb.setObjectName("wet_dsb")
        self.st_mode_lyt.addWidget(self.wet_dsb)
        self.verticalLayout.addLayout(self.st_mode_lyt)
        self.ir_path_lyt = QtWidgets.QHBoxLayout()
        self.ir_path_lyt.setObjectName("ir_path_lyt")
        self.mxlen_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.mxlen_cb.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.mxlen_cb.sizePolicy().hasHeightForWidth())
        self.mxlen_cb.setSizePolicy(sizePolicy)
        self.mxlen_cb.setObjectName("mxlen_cb")
        self.ir_path_lyt.addWidget(self.mxlen_cb)
        self.ir_path_l = QtWidgets.QLabel(self.centralwidget)
        self.ir_path_l.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ir_path_l.sizePolicy().hasHeightForWidth())
        self.ir_path_l.setSizePolicy(sizePolicy)
        self.ir_path_l.setText("")
        self.ir_path_l.setObjectName("ir_path_l")
        self.ir_path_lyt.addWidget(self.ir_path_l)
        self.set_ir_path_tb = QtWidgets.QToolButton(self.centralwidget)
        self.set_ir_path_tb.setEnabled(False)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.set_ir_path_tb.setFont(font)
        self.set_ir_path_tb.setObjectName("set_ir_path_tb")
        self.ir_path_lyt.addWidget(self.set_ir_path_tb)
        self.verticalLayout.addLayout(self.ir_path_lyt)
        self.filter_side_lyt = QtWidgets.QHBoxLayout()
        self.filter_side_lyt.setObjectName("filter_side_lyt")
        self.filter_side_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.filter_side_cb.setChecked(True)
        self.filter_side_cb.setObjectName("filter_side_cb")
        self.filter_side_lyt.addWidget(self.filter_side_cb)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.filter_side_lyt.addItem(spacerItem1)
        self.filter_side_wid = QtWidgets.QWidget(self.centralwidget)
        self.filter_side_wid.setObjectName("filter_side_wid")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.filter_side_wid)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.cutoff_l = QtWidgets.QLabel(self.filter_side_wid)
        self.cutoff_l.setObjectName("cutoff_l")
        self.horizontalLayout_7.addWidget(self.cutoff_l)
        self.cutoff_dsb = QtWidgets.QDoubleSpinBox(self.filter_side_wid)
        self.cutoff_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.cutoff_dsb.setFrame(False)
        self.cutoff_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.cutoff_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.cutoff_dsb.setMaximum(20000.0)
        self.cutoff_dsb.setProperty("value", 500.0)
        self.cutoff_dsb.setObjectName("cutoff_dsb")
        self.horizontalLayout_7.addWidget(self.cutoff_dsb)
        self.band_l = QtWidgets.QLabel(self.filter_side_wid)
        self.band_l.setObjectName("band_l")
        self.horizontalLayout_7.addWidget(self.band_l)
        self.band_dsb = QtWidgets.QDoubleSpinBox(self.filter_side_wid)
        self.band_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.band_dsb.setFrame(False)
        self.band_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.band_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.band_dsb.setMinimum(-20000.0)
        self.band_dsb.setMaximum(20000.0)
        self.band_dsb.setProperty("value", 500.0)
        self.band_dsb.setObjectName("band_dsb")
        self.horizontalLayout_7.addWidget(self.band_dsb)
        self.filter_side_lyt.addWidget(self.filter_side_wid)
        self.verticalLayout.addLayout(self.filter_side_lyt)
        self.balance_lyt = QtWidgets.QHBoxLayout()
        self.balance_lyt.setObjectName("balance_lyt")
        self.balance_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.balance_cb.setChecked(True)
        self.balance_cb.setObjectName("balance_cb")
        self.balance_lyt.addWidget(self.balance_cb)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.balance_lyt.addItem(spacerItem2)
        self.width_l = QtWidgets.QLabel(self.centralwidget)
        self.width_l.setObjectName("width_l")
        self.balance_lyt.addWidget(self.width_l)
        self.width_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.width_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.width_dsb.setFrame(False)
        self.width_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.width_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.width_dsb.setDecimals(3)
        self.width_dsb.setMaximum(8.0)
        self.width_dsb.setSingleStep(0.1)
        self.width_dsb.setProperty("value", 1.0)
        self.width_dsb.setObjectName("width_dsb")
        self.balance_lyt.addWidget(self.width_dsb)
        self.verticalLayout.addLayout(self.balance_lyt)
        self.output_path_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_path_title_l.sizePolicy().hasHeightForWidth())
        self.output_path_title_l.setSizePolicy(sizePolicy)
        self.output_path_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.output_path_title_l.setStyleSheet("background-color: rgb(127, 63, 127);\n"
"color: rgb(255, 255, 255);")
        self.output_path_title_l.setObjectName("output_path_title_l")
        self.verticalLayout.addWidget(self.output_path_title_l)
        self.output_path_lyt = QtWidgets.QHBoxLayout()
        self.output_path_lyt.setObjectName("output_path_lyt")
        self.output_path_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_path_l.sizePolicy().hasHeightForWidth())
        self.output_path_l.setSizePolicy(sizePolicy)
        self.output_path_l.setText("")
        self.output_path_l.setObjectName("output_path_l")
        self.output_path_lyt.addWidget(self.output_path_l)
        self.set_output_path_tb = QtWidgets.QToolButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.set_output_path_tb.setFont(font)
        self.set_output_path_tb.setObjectName("set_output_path_tb")
        self.output_path_lyt.addWidget(self.set_output_path_tb)
        self.verticalLayout.addLayout(self.output_path_lyt)
        self.settings_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.settings_title_l.sizePolicy().hasHeightForWidth())
        self.settings_title_l.setSizePolicy(sizePolicy)
        self.settings_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.settings_title_l.setStyleSheet("background-color: rgb(127, 63, 127);\n"
"color: rgb(255, 255, 255);")
        self.settings_title_l.setObjectName("settings_title_l")
        self.verticalLayout.addWidget(self.settings_title_l)
        self.file_settings_lyt = QtWidgets.QHBoxLayout()
        self.file_settings_lyt.setObjectName("file_settings_lyt")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setObjectName("label_2")
        self.file_settings_lyt.addWidget(self.label_2)
        self.format_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.format_cmb.sizePolicy().hasHeightForWidth())
        self.format_cmb.setSizePolicy(sizePolicy)
        self.format_cmb.setFrame(False)
        self.format_cmb.setObjectName("format_cmb")
        self.format_cmb.addItem("")
        self.format_cmb.addItem("")
        self.format_cmb.addItem("")
        self.file_settings_lyt.addWidget(self.format_cmb)
        self.bd_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bd_l.sizePolicy().hasHeightForWidth())
        self.bd_l.setSizePolicy(sizePolicy)
        self.bd_l.setObjectName("bd_l")
        self.file_settings_lyt.addWidget(self.bd_l)
        self.bitdepth_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bitdepth_cmb.sizePolicy().hasHeightForWidth())
        self.bitdepth_cmb.setSizePolicy(sizePolicy)
        self.bitdepth_cmb.setFrame(False)
        self.bitdepth_cmb.setObjectName("bitdepth_cmb")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.file_settings_lyt.addWidget(self.bitdepth_cmb)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.file_settings_lyt.addItem(spacerItem3)
        self.add_suffix_cb = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add_suffix_cb.sizePolicy().hasHeightForWidth())
        self.add_suffix_cb.setSizePolicy(sizePolicy)
        self.add_suffix_cb.setChecked(True)
        self.add_suffix_cb.setObjectName("add_suffix_cb")
        self.file_settings_lyt.addWidget(self.add_suffix_cb)
        self.suffix_le = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suffix_le.sizePolicy().hasHeightForWidth())
        self.suffix_le.setSizePolicy(sizePolicy)
        self.suffix_le.setMaxLength(16)
        self.suffix_le.setFrame(False)
        self.suffix_le.setObjectName("suffix_le")
        self.file_settings_lyt.addWidget(self.suffix_le)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.file_settings_lyt.addItem(spacerItem4)
        self.no_overwriting_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.no_overwriting_cb.setChecked(True)
        self.no_overwriting_cb.setObjectName("no_overwriting_cb")
        self.file_settings_lyt.addWidget(self.no_overwriting_cb)
        self.verticalLayout.addLayout(self.file_settings_lyt)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.buttons_lyt = QtWidgets.QGridLayout()
        self.buttons_lyt.setObjectName("buttons_lyt")
        self.process_sel_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_sel_pb.sizePolicy().hasHeightForWidth())
        self.process_sel_pb.setSizePolicy(sizePolicy)
        self.process_sel_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.process_sel_pb.setFont(font)
        self.process_sel_pb.setObjectName("process_sel_pb")
        self.buttons_lyt.addWidget(self.process_sel_pb, 0, 1, 1, 1)
        self.preview_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.preview_pb.sizePolicy().hasHeightForWidth())
        self.preview_pb.setSizePolicy(sizePolicy)
        self.preview_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.preview_pb.setFont(font)
        self.preview_pb.setObjectName("preview_pb")
        self.buttons_lyt.addWidget(self.preview_pb, 0, 0, 1, 1)
        self.process_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_pb.sizePolicy().hasHeightForWidth())
        self.process_pb.setSizePolicy(sizePolicy)
        self.process_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.process_pb.setFont(font)
        self.process_pb.setStyleSheet("QPushButton{background-color: rgb(127, 63, 127);\n"
"color: rgb(255, 255, 255);}")
        self.process_pb.setDefault(False)
        self.process_pb.setObjectName("process_pb")
        self.buttons_lyt.addWidget(self.process_pb, 1, 1, 1, 1)
        self.verticalLayout.addLayout(self.buttons_lyt)
        self.progress_pb = QtWidgets.QProgressBar(self.centralwidget)
        self.progress_pb.setStyleSheet("QProgressBar{border: none;}")
        self.progress_pb.setProperty("value", 0)
        self.progress_pb.setAlignment(QtCore.Qt.AlignCenter)
        self.progress_pb.setTextVisible(False)
        self.progress_pb.setFormat("")
        self.progress_pb.setObjectName("progress_pb")
        self.verticalLayout.addWidget(self.progress_pb)
        st_tool_mw.setCentralWidget(self.centralwidget)

        self.retranslateUi(st_tool_mw)
        self.st_mode_cmb.setCurrentIndex(3)
        self.format_cmb.setCurrentIndex(0)
        self.bitdepth_cmb.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(st_tool_mw)

    def retranslateUi(self, st_tool_mw):
        _translate = QtCore.QCoreApplication.translate
        st_tool_mw.setWindowTitle(_translate("st_tool_mw", "Stereo Tool"))
        self.files_title_l.setText(_translate("st_tool_mw", "Input Files"))
        self.files_lw.setToolTip(_translate("st_tool_mw", "Drag and drop files or directories\n"
"Right click for context actions\n"
"Double-click to play"))
        self.set_files_tb.setToolTip(_translate("st_tool_mw", "Set files to process"))
        self.set_files_tb.setText(_translate("st_tool_mw", "..."))
        self.options_title_l.setText(_translate("st_tool_mw", "Options"))
        self.mode_l.setText(_translate("st_tool_mw", "Mode"))
        self.st_mode_cmb.setToolTip(_translate("st_tool_mw", "Mode used to for pseudo-stereo effect\n"
"\n"
"\'haas\'    apply delay to side channel\n"
"\'velvet\'    convolve side channel with a velvet noise with increasing delay between impulses (typically weaker than haas)\n"
"\'convolve\'    apply a stereo imaging impulse response\n"
"\'conv_side\'    convolve the side channel using the side channel of an impulse response (default)\n"
"\n"
"NOTE: \'haas\' and \'velvet\' modes are inspired by Ozone Stereo Imager module and behave roughly the same"))
        self.st_mode_cmb.setItemText(0, _translate("st_tool_mw", "haas"))
        self.st_mode_cmb.setItemText(1, _translate("st_tool_mw", "velvet"))
        self.st_mode_cmb.setItemText(2, _translate("st_tool_mw", "convolve"))
        self.st_mode_cmb.setItemText(3, _translate("st_tool_mw", "conv_side"))
        self.delay_l.setText(_translate("st_tool_mw", "Delay"))
        self.delay_dsb.setToolTip(_translate("st_tool_mw", "Pseudo-Stereo delay in in ms"))
        self.seed_l.setText(_translate("st_tool_mw", "Seed"))
        self.seed_sb.setToolTip(_translate("st_tool_mw", "Velvet noise seed (-1 to randomize for each file)"))
        self.wet_l.setText(_translate("st_tool_mw", "Wet"))
        self.wet_dsb.setToolTip(_translate("st_tool_mw", "Convolution effect wet level\n"
"\n"
"TIP : Reduce wetness then increase (compensate) stereo width\n"
"to benefit from enhanced stereo but with reduced hall/room effect"))
        self.mxlen_cb.setToolTip(_translate("st_tool_mw", "Extend length so convolution tail is not cut"))
        self.mxlen_cb.setText(_translate("st_tool_mw", "Max Length"))
        self.ir_path_l.setToolTip(_translate("st_tool_mw", "Path to IR used for \'convolve\' and \'conv_side\' modes\n"
"\n"
"Right click to choose between provided dolby headphones IR\n"
"DH1 is designed to sound as a home theater setup (average effect)\n"
"DH2 is designed to sound like a medium-sized room (more subtle effect)\n"
"DH3 sounds like a large theater (strongest effect)"))
        self.set_ir_path_tb.setToolTip(_translate("st_tool_mw", "Set IR to use for convolution"))
        self.set_ir_path_tb.setText(_translate("st_tool_mw", "..."))
        self.filter_side_cb.setToolTip(_translate("st_tool_mw", "Filter side channel\n"
"High pass to remove stereo effect in bass range (Band > 0)\n"
"Low pass to tighten stereo effect (Band < 0)"))
        self.filter_side_cb.setText(_translate("st_tool_mw", "Filter Side Channel"))
        self.cutoff_l.setText(_translate("st_tool_mw", "Cutoff"))
        self.cutoff_dsb.setToolTip(_translate("st_tool_mw", "Cutoff frequency"))
        self.band_l.setText(_translate("st_tool_mw", "Band"))
        self.band_dsb.setToolTip(_translate("st_tool_mw", "Transition band width\n"
"Positive : High pass filter\n"
"Negative : Low pass filter"))
        self.balance_cb.setToolTip(_translate("st_tool_mw", "Rebalance left and right channel so audio feels centered\n"
"Recommanded, especially with \'velvet\' mode"))
        self.balance_cb.setText(_translate("st_tool_mw", "Auto-Balance L/R"))
        self.width_l.setText(_translate("st_tool_mw", "Stereo Width"))
        self.width_dsb.setToolTip(_translate("st_tool_mw", "Stereo Width"))
        self.output_path_title_l.setText(_translate("st_tool_mw", "Output Path"))
        self.set_output_path_tb.setToolTip(_translate("st_tool_mw", "Set output path\n"
"Process files in their respective directory if empty"))
        self.set_output_path_tb.setText(_translate("st_tool_mw", "..."))
        self.settings_title_l.setText(_translate("st_tool_mw", "File Settings"))
        self.label_2.setText(_translate("st_tool_mw", "Format"))
        self.format_cmb.setToolTip(_translate("st_tool_mw", "flac only allows integer format up to 24 bits\n"
"Use wav for 32 bits float"))
        self.format_cmb.setItemText(0, _translate("st_tool_mw", "same"))
        self.format_cmb.setItemText(1, _translate("st_tool_mw", "wav"))
        self.format_cmb.setItemText(2, _translate("st_tool_mw", "flac"))
        self.bd_l.setText(_translate("st_tool_mw", "Bit Depth"))
        self.bitdepth_cmb.setItemText(0, _translate("st_tool_mw", "same"))
        self.bitdepth_cmb.setItemText(1, _translate("st_tool_mw", "16"))
        self.bitdepth_cmb.setItemText(2, _translate("st_tool_mw", "24"))
        self.bitdepth_cmb.setItemText(3, _translate("st_tool_mw", "32"))
        self.add_suffix_cb.setText(_translate("st_tool_mw", "Add suffix"))
        self.suffix_le.setToolTip(_translate("st_tool_mw", "Suffix added to the base name"))
        self.suffix_le.setText(_translate("st_tool_mw", "_st"))
        self.no_overwriting_cb.setToolTip(_translate("st_tool_mw", "Avoid overwriting original files by moving them to a backup directory"))
        self.no_overwriting_cb.setText(_translate("st_tool_mw", "Avoid Overwriting"))
        self.process_sel_pb.setToolTip(_translate("st_tool_mw", "Process selected item(s) with current settings"))
        self.process_sel_pb.setText(_translate("st_tool_mw", "Process Selected"))
        self.preview_pb.setToolTip(_translate("st_tool_mw", "Apply current settings to selected item\n"
"and play the result without writing anything"))
        self.preview_pb.setText(_translate("st_tool_mw", "Preview Selected"))
        self.process_pb.setToolTip(_translate("st_tool_mw", "Process all input files with current settings"))
        self.process_pb.setText(_translate("st_tool_mw", "Batch Process"))
