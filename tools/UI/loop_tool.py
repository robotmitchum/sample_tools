# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\mitch\Documents\PycharmProjects\github\sample_tools\tools\UI\loop_tool.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_loop_tool_mw(object):
    def setupUi(self, loop_tool_mw):
        loop_tool_mw.setObjectName("loop_tool_mw")
        loop_tool_mw.resize(880, 800)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        loop_tool_mw.setFont(font)
        loop_tool_mw.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.centralwidget = QtWidgets.QWidget(loop_tool_mw)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.files_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.files_title_l.sizePolicy().hasHeightForWidth())
        self.files_title_l.setSizePolicy(sizePolicy)
        self.files_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.files_title_l.setStyleSheet("background-color: rgb(31, 159, 127);\n"
"color: rgb(255, 255, 255);")
        self.files_title_l.setObjectName("files_title_l")
        self.verticalLayout.addWidget(self.files_title_l)
        self.files_lyt = QtWidgets.QHBoxLayout()
        self.files_lyt.setObjectName("files_lyt")
        self.files_lw = QtWidgets.QListWidget(self.centralwidget)
        self.files_lw.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.files_lw.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.files_lw.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.files_lw.setObjectName("files_lw")
        self.files_lyt.addWidget(self.files_lw)
        self.set_files_tb = QtWidgets.QToolButton(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.set_files_tb.setFont(font)
        self.set_files_tb.setObjectName("set_files_tb")
        self.files_lyt.addWidget(self.set_files_tb)
        self.verticalLayout.addLayout(self.files_lyt)
        self.options_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.options_title_l.sizePolicy().hasHeightForWidth())
        self.options_title_l.setSizePolicy(sizePolicy)
        self.options_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.options_title_l.setStyleSheet("background-color: rgb(31, 159, 127);\n"
"color: rgb(255, 255, 255);")
        self.options_title_l.setObjectName("options_title_l")
        self.verticalLayout.addWidget(self.options_title_l)
        self.env_shaping_lyt = QtWidgets.QHBoxLayout()
        self.env_shaping_lyt.setObjectName("env_shaping_lyt")
        self.env_shaping_cb = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.env_shaping_cb.sizePolicy().hasHeightForWidth())
        self.env_shaping_cb.setSizePolicy(sizePolicy)
        self.env_shaping_cb.setMinimumSize(QtCore.QSize(128, 0))
        self.env_shaping_cb.setObjectName("env_shaping_cb")
        self.env_shaping_lyt.addWidget(self.env_shaping_cb)
        self.env_shaping_wid = QtWidgets.QWidget(self.centralwidget)
        self.env_shaping_wid.setEnabled(False)
        self.env_shaping_wid.setObjectName("env_shaping_wid")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.env_shaping_wid)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.env_mask_l = QtWidgets.QLabel(self.env_shaping_wid)
        self.env_mask_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.env_mask_l.setObjectName("env_mask_l")
        self.horizontalLayout.addWidget(self.env_mask_l)
        self.env_mode_cmb = QtWidgets.QComboBox(self.env_shaping_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.env_mode_cmb.sizePolicy().hasHeightForWidth())
        self.env_mode_cmb.setSizePolicy(sizePolicy)
        self.env_mode_cmb.setFrame(False)
        self.env_mode_cmb.setObjectName("env_mode_cmb")
        self.env_mode_cmb.addItem("")
        self.env_mode_cmb.addItem("")
        self.horizontalLayout.addWidget(self.env_mode_cmb)
        self.env_th_l = QtWidgets.QLabel(self.env_shaping_wid)
        self.env_th_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.env_th_l.setObjectName("env_th_l")
        self.horizontalLayout.addWidget(self.env_th_l)
        self.env_th_dsb = QtWidgets.QDoubleSpinBox(self.env_shaping_wid)
        self.env_th_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.env_th_dsb.setFrame(False)
        self.env_th_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.env_th_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.env_th_dsb.setMinimum(-60.0)
        self.env_th_dsb.setMaximum(0.0)
        self.env_th_dsb.setProperty("value", -12.0)
        self.env_th_dsb.setObjectName("env_th_dsb")
        self.horizontalLayout.addWidget(self.env_th_dsb)
        self.env_min_l = QtWidgets.QLabel(self.env_shaping_wid)
        self.env_min_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.env_min_l.setObjectName("env_min_l")
        self.horizontalLayout.addWidget(self.env_min_l)
        self.env_min_dsb = QtWidgets.QDoubleSpinBox(self.env_shaping_wid)
        self.env_min_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.env_min_dsb.setFrame(False)
        self.env_min_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.env_min_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.env_min_dsb.setMinimum(-60.0)
        self.env_min_dsb.setMaximum(0.0)
        self.env_min_dsb.setProperty("value", -30.0)
        self.env_min_dsb.setObjectName("env_min_dsb")
        self.horizontalLayout.addWidget(self.env_min_dsb)
        self.env_window_wid = QtWidgets.QWidget(self.env_shaping_wid)
        self.env_window_wid.setEnabled(False)
        self.env_window_wid.setObjectName("env_window_wid")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.env_window_wid)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.env_window_l = QtWidgets.QLabel(self.env_window_wid)
        self.env_window_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.env_window_l.setObjectName("env_window_l")
        self.horizontalLayout_4.addWidget(self.env_window_l)
        self.env_window_dsb = QtWidgets.QDoubleSpinBox(self.env_window_wid)
        self.env_window_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.env_window_dsb.setFrame(False)
        self.env_window_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.env_window_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.env_window_dsb.setDecimals(1)
        self.env_window_dsb.setMinimum(1.0)
        self.env_window_dsb.setMaximum(500.0)
        self.env_window_dsb.setProperty("value", 50.0)
        self.env_window_dsb.setObjectName("env_window_dsb")
        self.horizontalLayout_4.addWidget(self.env_window_dsb)
        self.horizontalLayout.addWidget(self.env_window_wid)
        self.env_shaping_lyt.addWidget(self.env_shaping_wid)
        self.verticalLayout.addLayout(self.env_shaping_lyt)
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout.addWidget(self.line_2)
        self.detect_loop_lyt = QtWidgets.QHBoxLayout()
        self.detect_loop_lyt.setObjectName("detect_loop_lyt")
        self.detect_loop_cb = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.detect_loop_cb.sizePolicy().hasHeightForWidth())
        self.detect_loop_cb.setSizePolicy(sizePolicy)
        self.detect_loop_cb.setMinimumSize(QtCore.QSize(128, 0))
        self.detect_loop_cb.setChecked(True)
        self.detect_loop_cb.setObjectName("detect_loop_cb")
        self.detect_loop_lyt.addWidget(self.detect_loop_cb)
        self.detect_loop_wid = QtWidgets.QWidget(self.centralwidget)
        self.detect_loop_wid.setEnabled(True)
        self.detect_loop_wid.setObjectName("detect_loop_wid")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.detect_loop_wid)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.loop_min_length_l = QtWidgets.QLabel(self.detect_loop_wid)
        self.loop_min_length_l.setMinimumSize(QtCore.QSize(64, 0))
        self.loop_min_length_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.loop_min_length_l.setObjectName("loop_min_length_l")
        self.horizontalLayout_2.addWidget(self.loop_min_length_l)
        self.loop_min_length_dsb = QtWidgets.QDoubleSpinBox(self.detect_loop_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.loop_min_length_dsb.sizePolicy().hasHeightForWidth())
        self.loop_min_length_dsb.setSizePolicy(sizePolicy)
        self.loop_min_length_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.loop_min_length_dsb.setFrame(False)
        self.loop_min_length_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.loop_min_length_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.loop_min_length_dsb.setDecimals(1)
        self.loop_min_length_dsb.setMinimum(0.0)
        self.loop_min_length_dsb.setMaximum(60000.0)
        self.loop_min_length_dsb.setProperty("value", 100.0)
        self.loop_min_length_dsb.setObjectName("loop_min_length_dsb")
        self.horizontalLayout_2.addWidget(self.loop_min_length_dsb)
        self.cues_l = QtWidgets.QLabel(self.detect_loop_wid)
        self.cues_l.setMinimumSize(QtCore.QSize(64, 0))
        self.cues_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.cues_l.setObjectName("cues_l")
        self.horizontalLayout_2.addWidget(self.cues_l)
        self.cues_sb = QtWidgets.QSpinBox(self.detect_loop_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cues_sb.sizePolicy().hasHeightForWidth())
        self.cues_sb.setSizePolicy(sizePolicy)
        self.cues_sb.setMinimumSize(QtCore.QSize(64, 0))
        self.cues_sb.setFrame(False)
        self.cues_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.cues_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.cues_sb.setMinimum(90000)
        self.cues_sb.setMaximum(4000000)
        self.cues_sb.setSingleStep(1)
        self.cues_sb.setProperty("value", 640000)
        self.cues_sb.setObjectName("cues_sb")
        self.horizontalLayout_2.addWidget(self.cues_sb)
        self.loop_window_l = QtWidgets.QLabel(self.detect_loop_wid)
        self.loop_window_l.setMinimumSize(QtCore.QSize(64, 0))
        self.loop_window_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.loop_window_l.setObjectName("loop_window_l")
        self.horizontalLayout_2.addWidget(self.loop_window_l)
        self.loop_window_dsb = QtWidgets.QDoubleSpinBox(self.detect_loop_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.loop_window_dsb.sizePolicy().hasHeightForWidth())
        self.loop_window_dsb.setSizePolicy(sizePolicy)
        self.loop_window_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.loop_window_dsb.setFrame(False)
        self.loop_window_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.loop_window_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.loop_window_dsb.setDecimals(1)
        self.loop_window_dsb.setMinimum(0.0)
        self.loop_window_dsb.setMaximum(2000.0)
        self.loop_window_dsb.setProperty("value", 10.0)
        self.loop_window_dsb.setObjectName("loop_window_dsb")
        self.horizontalLayout_2.addWidget(self.loop_window_dsb)
        self.window_offset_l = QtWidgets.QLabel(self.detect_loop_wid)
        self.window_offset_l.setMinimumSize(QtCore.QSize(64, 0))
        self.window_offset_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.window_offset_l.setObjectName("window_offset_l")
        self.horizontalLayout_2.addWidget(self.window_offset_l)
        self.window_offset_dsb = QtWidgets.QDoubleSpinBox(self.detect_loop_wid)
        self.window_offset_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.window_offset_dsb.setFrame(False)
        self.window_offset_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.window_offset_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.window_offset_dsb.setDecimals(1)
        self.window_offset_dsb.setMinimum(0.0)
        self.window_offset_dsb.setMaximum(1.0)
        self.window_offset_dsb.setSingleStep(0.01)
        self.window_offset_dsb.setProperty("value", 0.5)
        self.window_offset_dsb.setObjectName("window_offset_dsb")
        self.horizontalLayout_2.addWidget(self.window_offset_dsb)
        self.detect_loop_lyt.addWidget(self.detect_loop_wid)
        self.verticalLayout.addLayout(self.detect_loop_lyt)
        self.detect_extra_wid = QtWidgets.QWidget(self.centralwidget)
        self.detect_extra_wid.setObjectName("detect_extra_wid")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.detect_extra_wid)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.hash_search_cb = QtWidgets.QCheckBox(self.detect_extra_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.hash_search_cb.sizePolicy().hasHeightForWidth())
        self.hash_search_cb.setSizePolicy(sizePolicy)
        self.hash_search_cb.setMinimumSize(QtCore.QSize(128, 0))
        self.hash_search_cb.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.hash_search_cb.setObjectName("hash_search_cb")
        self.horizontalLayout_6.addWidget(self.hash_search_cb)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem)
        self.range_limits_cb = QtWidgets.QCheckBox(self.detect_extra_wid)
        self.range_limits_cb.setChecked(True)
        self.range_limits_cb.setObjectName("range_limits_cb")
        self.horizontalLayout_6.addWidget(self.range_limits_cb)
        self.range_limits_wid = QtWidgets.QWidget(self.detect_extra_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.range_limits_wid.sizePolicy().hasHeightForWidth())
        self.range_limits_wid.setSizePolicy(sizePolicy)
        self.range_limits_wid.setObjectName("range_limits_wid")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.range_limits_wid)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.start_range_l = QtWidgets.QLabel(self.range_limits_wid)
        self.start_range_l.setMinimumSize(QtCore.QSize(64, 0))
        self.start_range_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.start_range_l.setObjectName("start_range_l")
        self.horizontalLayout_5.addWidget(self.start_range_l)
        self.start_range_dsb = QtWidgets.QDoubleSpinBox(self.range_limits_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.start_range_dsb.sizePolicy().hasHeightForWidth())
        self.start_range_dsb.setSizePolicy(sizePolicy)
        self.start_range_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.start_range_dsb.setFrame(False)
        self.start_range_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.start_range_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.start_range_dsb.setDecimals(3)
        self.start_range_dsb.setMinimum(0.0)
        self.start_range_dsb.setMaximum(1.0)
        self.start_range_dsb.setSingleStep(0.01)
        self.start_range_dsb.setProperty("value", 1.0)
        self.start_range_dsb.setObjectName("start_range_dsb")
        self.horizontalLayout_5.addWidget(self.start_range_dsb)
        self.end_range_l = QtWidgets.QLabel(self.range_limits_wid)
        self.end_range_l.setMinimumSize(QtCore.QSize(64, 0))
        self.end_range_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.end_range_l.setObjectName("end_range_l")
        self.horizontalLayout_5.addWidget(self.end_range_l)
        self.end_range_dsb = QtWidgets.QDoubleSpinBox(self.range_limits_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.end_range_dsb.sizePolicy().hasHeightForWidth())
        self.end_range_dsb.setSizePolicy(sizePolicy)
        self.end_range_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.end_range_dsb.setFrame(False)
        self.end_range_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.end_range_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.end_range_dsb.setDecimals(3)
        self.end_range_dsb.setMinimum(0.0)
        self.end_range_dsb.setMaximum(1.0)
        self.end_range_dsb.setSingleStep(0.01)
        self.end_range_dsb.setProperty("value", 0.0)
        self.end_range_dsb.setObjectName("end_range_dsb")
        self.horizontalLayout_5.addWidget(self.end_range_dsb)
        self.horizontalLayout_6.addWidget(self.range_limits_wid)
        self.verticalLayout.addWidget(self.detect_extra_wid)
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.verticalLayout.addWidget(self.line_3)
        self.crossfade_lyt = QtWidgets.QHBoxLayout()
        self.crossfade_lyt.setObjectName("crossfade_lyt")
        self.crossfade_cb = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crossfade_cb.sizePolicy().hasHeightForWidth())
        self.crossfade_cb.setSizePolicy(sizePolicy)
        self.crossfade_cb.setMinimumSize(QtCore.QSize(128, 0))
        self.crossfade_cb.setObjectName("crossfade_cb")
        self.crossfade_lyt.addWidget(self.crossfade_cb)
        self.crossfade_wid = QtWidgets.QWidget(self.centralwidget)
        self.crossfade_wid.setEnabled(False)
        self.crossfade_wid.setObjectName("crossfade_wid")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.crossfade_wid)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.fd_preview_only_cb = QtWidgets.QCheckBox(self.crossfade_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fd_preview_only_cb.sizePolicy().hasHeightForWidth())
        self.fd_preview_only_cb.setSizePolicy(sizePolicy)
        self.fd_preview_only_cb.setChecked(True)
        self.fd_preview_only_cb.setObjectName("fd_preview_only_cb")
        self.horizontalLayout_3.addWidget(self.fd_preview_only_cb)
        self.fade_mode_l = QtWidgets.QLabel(self.crossfade_wid)
        self.fade_mode_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.fade_mode_l.setObjectName("fade_mode_l")
        self.horizontalLayout_3.addWidget(self.fade_mode_l)
        self.fade_mode_cmb = QtWidgets.QComboBox(self.crossfade_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fade_mode_cmb.sizePolicy().hasHeightForWidth())
        self.fade_mode_cmb.setSizePolicy(sizePolicy)
        self.fade_mode_cmb.setFrame(False)
        self.fade_mode_cmb.setObjectName("fade_mode_cmb")
        self.fade_mode_cmb.addItem("")
        self.fade_mode_cmb.addItem("")
        self.fade_mode_cmb.addItem("")
        self.horizontalLayout_3.addWidget(self.fade_mode_cmb)
        self.fade_in_l = QtWidgets.QLabel(self.crossfade_wid)
        self.fade_in_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.fade_in_l.setObjectName("fade_in_l")
        self.horizontalLayout_3.addWidget(self.fade_in_l)
        self.fade_in_dsb = QtWidgets.QDoubleSpinBox(self.crossfade_wid)
        self.fade_in_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.fade_in_dsb.setFrame(False)
        self.fade_in_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.fade_in_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.fade_in_dsb.setMinimum(0.0)
        self.fade_in_dsb.setMaximum(4.0)
        self.fade_in_dsb.setSingleStep(0.01)
        self.fade_in_dsb.setProperty("value", 0.5)
        self.fade_in_dsb.setObjectName("fade_in_dsb")
        self.horizontalLayout_3.addWidget(self.fade_in_dsb)
        self.fade_out_l = QtWidgets.QLabel(self.crossfade_wid)
        self.fade_out_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.fade_out_l.setObjectName("fade_out_l")
        self.horizontalLayout_3.addWidget(self.fade_out_l)
        self.fade_out_dsb = QtWidgets.QDoubleSpinBox(self.crossfade_wid)
        self.fade_out_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.fade_out_dsb.setFrame(False)
        self.fade_out_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.fade_out_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.fade_out_dsb.setMinimum(0.0)
        self.fade_out_dsb.setMaximum(4.0)
        self.fade_out_dsb.setSingleStep(0.01)
        self.fade_out_dsb.setProperty("value", 0.5)
        self.fade_out_dsb.setObjectName("fade_out_dsb")
        self.horizontalLayout_3.addWidget(self.fade_out_dsb)
        self.crossfade_lyt.addWidget(self.crossfade_wid)
        self.verticalLayout.addLayout(self.crossfade_lyt)
        self.line_4 = QtWidgets.QFrame(self.centralwidget)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.verticalLayout.addWidget(self.line_4)
        self.resynth_lyt = QtWidgets.QHBoxLayout()
        self.resynth_lyt.setSpacing(0)
        self.resynth_lyt.setObjectName("resynth_lyt")
        self.resynth_cb = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.resynth_cb.sizePolicy().hasHeightForWidth())
        self.resynth_cb.setSizePolicy(sizePolicy)
        self.resynth_cb.setMinimumSize(QtCore.QSize(128, 0))
        self.resynth_cb.setObjectName("resynth_cb")
        self.resynth_lyt.addWidget(self.resynth_cb)
        self.resynth_wid = QtWidgets.QWidget(self.centralwidget)
        self.resynth_wid.setEnabled(False)
        self.resynth_wid.setObjectName("resynth_wid")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.resynth_wid)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.fft_range_l = QtWidgets.QLabel(self.resynth_wid)
        self.fft_range_l.setMinimumSize(QtCore.QSize(80, 0))
        self.fft_range_l.setMaximumSize(QtCore.QSize(80, 16777215))
        self.fft_range_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.fft_range_l.setObjectName("fft_range_l")
        self.horizontalLayout_7.addWidget(self.fft_range_l)
        self.fft_range_cmb = QtWidgets.QComboBox(self.resynth_wid)
        self.fft_range_cmb.setMinimumSize(QtCore.QSize(80, 0))
        self.fft_range_cmb.setMaximumSize(QtCore.QSize(80, 16777215))
        self.fft_range_cmb.setFrame(False)
        self.fft_range_cmb.setObjectName("fft_range_cmb")
        self.fft_range_cmb.addItem("")
        self.fft_range_cmb.addItem("")
        self.horizontalLayout_7.addWidget(self.fft_range_cmb)
        self.fft_start_l = QtWidgets.QLabel(self.resynth_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fft_start_l.sizePolicy().hasHeightForWidth())
        self.fft_start_l.setSizePolicy(sizePolicy)
        self.fft_start_l.setMinimumSize(QtCore.QSize(96, 0))
        self.fft_start_l.setMaximumSize(QtCore.QSize(96, 16777215))
        self.fft_start_l.setAlignment(QtCore.Qt.AlignCenter)
        self.fft_start_l.setObjectName("fft_start_l")
        self.horizontalLayout_7.addWidget(self.fft_start_l)
        self.fft_start_dsb = QtWidgets.QDoubleSpinBox(self.resynth_wid)
        self.fft_start_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.fft_start_dsb.setFrame(False)
        self.fft_start_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.fft_start_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.fft_start_dsb.setDecimals(3)
        self.fft_start_dsb.setMinimum(0.0)
        self.fft_start_dsb.setMaximum(1.0)
        self.fft_start_dsb.setSingleStep(0.1)
        self.fft_start_dsb.setProperty("value", 0.25)
        self.fft_start_dsb.setObjectName("fft_start_dsb")
        self.horizontalLayout_7.addWidget(self.fft_start_dsb)
        self.fft_size_l = QtWidgets.QLabel(self.resynth_wid)
        self.fft_size_l.setMinimumSize(QtCore.QSize(80, 0))
        self.fft_size_l.setMaximumSize(QtCore.QSize(80, 16777215))
        self.fft_size_l.setAlignment(QtCore.Qt.AlignCenter)
        self.fft_size_l.setObjectName("fft_size_l")
        self.horizontalLayout_7.addWidget(self.fft_size_l)
        self.fft_size_dsb = QtWidgets.QDoubleSpinBox(self.resynth_wid)
        self.fft_size_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.fft_size_dsb.setFrame(False)
        self.fft_size_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.fft_size_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.fft_size_dsb.setDecimals(3)
        self.fft_size_dsb.setMinimum(0.0)
        self.fft_size_dsb.setMaximum(1.0)
        self.fft_size_dsb.setSingleStep(0.1)
        self.fft_size_dsb.setProperty("value", 1.0)
        self.fft_size_dsb.setObjectName("fft_size_dsb")
        self.horizontalLayout_7.addWidget(self.fft_size_dsb)
        self.duration_l = QtWidgets.QLabel(self.resynth_wid)
        self.duration_l.setMinimumSize(QtCore.QSize(96, 0))
        self.duration_l.setMaximumSize(QtCore.QSize(96, 16777215))
        self.duration_l.setAlignment(QtCore.Qt.AlignCenter)
        self.duration_l.setObjectName("duration_l")
        self.horizontalLayout_7.addWidget(self.duration_l)
        self.resynth_duration_dsb = QtWidgets.QDoubleSpinBox(self.resynth_wid)
        self.resynth_duration_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.resynth_duration_dsb.setFrame(False)
        self.resynth_duration_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.resynth_duration_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.resynth_duration_dsb.setDecimals(3)
        self.resynth_duration_dsb.setMinimum(0.0)
        self.resynth_duration_dsb.setMaximum(10.0)
        self.resynth_duration_dsb.setSingleStep(0.1)
        self.resynth_duration_dsb.setProperty("value", 2.0)
        self.resynth_duration_dsb.setObjectName("resynth_duration_dsb")
        self.horizontalLayout_7.addWidget(self.resynth_duration_dsb)
        self.resynth_lyt.addWidget(self.resynth_wid)
        self.verticalLayout.addLayout(self.resynth_lyt)
        self.resynth_tone_wid = QtWidgets.QWidget(self.centralwidget)
        self.resynth_tone_wid.setEnabled(False)
        self.resynth_tone_wid.setObjectName("resynth_tone_wid")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.resynth_tone_wid)
        self.horizontalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        spacerItem1 = QtWidgets.QSpacerItem(128, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem1)
        self.resynth_freq_mode_l = QtWidgets.QLabel(self.resynth_tone_wid)
        self.resynth_freq_mode_l.setMinimumSize(QtCore.QSize(80, 0))
        self.resynth_freq_mode_l.setMaximumSize(QtCore.QSize(80, 16777215))
        self.resynth_freq_mode_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.resynth_freq_mode_l.setObjectName("resynth_freq_mode_l")
        self.horizontalLayout_11.addWidget(self.resynth_freq_mode_l)
        self.resynth_freq_mode_cmb = QtWidgets.QComboBox(self.resynth_tone_wid)
        self.resynth_freq_mode_cmb.setMinimumSize(QtCore.QSize(80, 0))
        self.resynth_freq_mode_cmb.setMaximumSize(QtCore.QSize(80, 16777215))
        self.resynth_freq_mode_cmb.setFrame(False)
        self.resynth_freq_mode_cmb.setObjectName("resynth_freq_mode_cmb")
        self.resynth_freq_mode_cmb.addItem("")
        self.resynth_freq_mode_cmb.addItem("")
        self.resynth_freq_mode_cmb.addItem("")
        self.horizontalLayout_11.addWidget(self.resynth_freq_mode_cmb)
        self.freqs_l = QtWidgets.QLabel(self.resynth_tone_wid)
        self.freqs_l.setMinimumSize(QtCore.QSize(96, 0))
        self.freqs_l.setMaximumSize(QtCore.QSize(96, 16777215))
        self.freqs_l.setAlignment(QtCore.Qt.AlignCenter)
        self.freqs_l.setObjectName("freqs_l")
        self.horizontalLayout_11.addWidget(self.freqs_l)
        self.freqs_le = QtWidgets.QLineEdit(self.resynth_tone_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.freqs_le.sizePolicy().hasHeightForWidth())
        self.freqs_le.setSizePolicy(sizePolicy)
        self.freqs_le.setFrame(False)
        self.freqs_le.setAlignment(QtCore.Qt.AlignCenter)
        self.freqs_le.setObjectName("freqs_le")
        self.horizontalLayout_11.addWidget(self.freqs_le)
        self.atonal_mix_l = QtWidgets.QLabel(self.resynth_tone_wid)
        self.atonal_mix_l.setMinimumSize(QtCore.QSize(96, 0))
        self.atonal_mix_l.setMaximumSize(QtCore.QSize(96, 16777215))
        self.atonal_mix_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.atonal_mix_l.setObjectName("atonal_mix_l")
        self.horizontalLayout_11.addWidget(self.atonal_mix_l)
        self.atonal_mix_dsb = QtWidgets.QDoubleSpinBox(self.resynth_tone_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.atonal_mix_dsb.sizePolicy().hasHeightForWidth())
        self.atonal_mix_dsb.setSizePolicy(sizePolicy)
        self.atonal_mix_dsb.setMinimumSize(QtCore.QSize(96, 0))
        self.atonal_mix_dsb.setFrame(False)
        self.atonal_mix_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.atonal_mix_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.atonal_mix_dsb.setDecimals(3)
        self.atonal_mix_dsb.setMinimum(0.0)
        self.atonal_mix_dsb.setMaximum(4.0)
        self.atonal_mix_dsb.setSingleStep(0.1)
        self.atonal_mix_dsb.setProperty("value", 1.0)
        self.atonal_mix_dsb.setObjectName("atonal_mix_dsb")
        self.horizontalLayout_11.addWidget(self.atonal_mix_dsb)
        self.verticalLayout.addWidget(self.resynth_tone_wid)
        self.resynth_mix_wid = QtWidgets.QWidget(self.centralwidget)
        self.resynth_mix_wid.setEnabled(False)
        self.resynth_mix_wid.setObjectName("resynth_mix_wid")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.resynth_mix_wid)
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        spacerItem2 = QtWidgets.QSpacerItem(128, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem2)
        self.resynth_mix_l = QtWidgets.QLabel(self.resynth_mix_wid)
        self.resynth_mix_l.setMinimumSize(QtCore.QSize(80, 0))
        self.resynth_mix_l.setMaximumSize(QtCore.QSize(80, 16777215))
        self.resynth_mix_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.resynth_mix_l.setObjectName("resynth_mix_l")
        self.horizontalLayout_10.addWidget(self.resynth_mix_l)
        self.resynth_mix_cmb = QtWidgets.QComboBox(self.resynth_mix_wid)
        self.resynth_mix_cmb.setMinimumSize(QtCore.QSize(80, 0))
        self.resynth_mix_cmb.setMaximumSize(QtCore.QSize(80, 16777215))
        self.resynth_mix_cmb.setFrame(False)
        self.resynth_mix_cmb.setObjectName("resynth_mix_cmb")
        self.resynth_mix_cmb.addItem("")
        self.resynth_mix_cmb.addItem("")
        self.resynth_mix_cmb.addItem("")
        self.horizontalLayout_10.addWidget(self.resynth_mix_cmb)
        self.resynth_fade_in_l = QtWidgets.QLabel(self.resynth_mix_wid)
        self.resynth_fade_in_l.setMinimumSize(QtCore.QSize(96, 0))
        self.resynth_fade_in_l.setMaximumSize(QtCore.QSize(96, 16777215))
        self.resynth_fade_in_l.setAlignment(QtCore.Qt.AlignCenter)
        self.resynth_fade_in_l.setObjectName("resynth_fade_in_l")
        self.horizontalLayout_10.addWidget(self.resynth_fade_in_l)
        self.resynth_fade_in_dsb = QtWidgets.QDoubleSpinBox(self.resynth_mix_wid)
        self.resynth_fade_in_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.resynth_fade_in_dsb.setFrame(False)
        self.resynth_fade_in_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.resynth_fade_in_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.resynth_fade_in_dsb.setDecimals(3)
        self.resynth_fade_in_dsb.setMinimum(0.0)
        self.resynth_fade_in_dsb.setMaximum(1.0)
        self.resynth_fade_in_dsb.setSingleStep(0.1)
        self.resynth_fade_in_dsb.setProperty("value", 0.5)
        self.resynth_fade_in_dsb.setObjectName("resynth_fade_in_dsb")
        self.horizontalLayout_10.addWidget(self.resynth_fade_in_dsb)
        self.resynth_fade_out_l = QtWidgets.QLabel(self.resynth_mix_wid)
        self.resynth_fade_out_l.setMinimumSize(QtCore.QSize(80, 0))
        self.resynth_fade_out_l.setMaximumSize(QtCore.QSize(80, 16777215))
        self.resynth_fade_out_l.setAlignment(QtCore.Qt.AlignCenter)
        self.resynth_fade_out_l.setObjectName("resynth_fade_out_l")
        self.horizontalLayout_10.addWidget(self.resynth_fade_out_l)
        self.resynth_fade_out_dsb = QtWidgets.QDoubleSpinBox(self.resynth_mix_wid)
        self.resynth_fade_out_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.resynth_fade_out_dsb.setFrame(False)
        self.resynth_fade_out_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.resynth_fade_out_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.resynth_fade_out_dsb.setDecimals(3)
        self.resynth_fade_out_dsb.setMinimum(0.0)
        self.resynth_fade_out_dsb.setMaximum(1.0)
        self.resynth_fade_out_dsb.setSingleStep(0.1)
        self.resynth_fade_out_dsb.setProperty("value", 0.5)
        self.resynth_fade_out_dsb.setObjectName("resynth_fade_out_dsb")
        self.horizontalLayout_10.addWidget(self.resynth_fade_out_dsb)
        self.st_width_l = QtWidgets.QLabel(self.resynth_mix_wid)
        self.st_width_l.setMinimumSize(QtCore.QSize(96, 0))
        self.st_width_l.setMaximumSize(QtCore.QSize(96, 16777215))
        self.st_width_l.setAlignment(QtCore.Qt.AlignCenter)
        self.st_width_l.setObjectName("st_width_l")
        self.horizontalLayout_10.addWidget(self.st_width_l)
        self.st_width_dsb = QtWidgets.QDoubleSpinBox(self.resynth_mix_wid)
        self.st_width_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.st_width_dsb.setFrame(False)
        self.st_width_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.st_width_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.st_width_dsb.setDecimals(3)
        self.st_width_dsb.setMinimum(0.0)
        self.st_width_dsb.setMaximum(1.0)
        self.st_width_dsb.setSingleStep(0.1)
        self.st_width_dsb.setProperty("value", 0.5)
        self.st_width_dsb.setObjectName("st_width_dsb")
        self.horizontalLayout_10.addWidget(self.st_width_dsb)
        self.verticalLayout.addWidget(self.resynth_mix_wid)
        self.output_path_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_path_title_l.sizePolicy().hasHeightForWidth())
        self.output_path_title_l.setSizePolicy(sizePolicy)
        self.output_path_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.output_path_title_l.setStyleSheet("background-color: rgb(31, 159, 127);\n"
"color: rgb(255, 255, 255);")
        self.output_path_title_l.setObjectName("output_path_title_l")
        self.verticalLayout.addWidget(self.output_path_title_l)
        self.output_path_lyt = QtWidgets.QHBoxLayout()
        self.output_path_lyt.setObjectName("output_path_lyt")
        self.output_path_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_path_l.sizePolicy().hasHeightForWidth())
        self.output_path_l.setSizePolicy(sizePolicy)
        self.output_path_l.setText("")
        self.output_path_l.setObjectName("output_path_l")
        self.output_path_lyt.addWidget(self.output_path_l)
        self.set_output_path_tb = QtWidgets.QToolButton(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.set_output_path_tb.setFont(font)
        self.set_output_path_tb.setObjectName("set_output_path_tb")
        self.output_path_lyt.addWidget(self.set_output_path_tb)
        self.verticalLayout.addLayout(self.output_path_lyt)
        self.settings_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.settings_title_l.sizePolicy().hasHeightForWidth())
        self.settings_title_l.setSizePolicy(sizePolicy)
        self.settings_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.settings_title_l.setStyleSheet("background-color: rgb(31, 159, 127);\n"
"color: rgb(255, 255, 255);")
        self.settings_title_l.setObjectName("settings_title_l")
        self.verticalLayout.addWidget(self.settings_title_l)
        self.output_file_lyt = QtWidgets.QHBoxLayout()
        self.output_file_lyt.setObjectName("output_file_lyt")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setObjectName("label_2")
        self.output_file_lyt.addWidget(self.label_2)
        self.format_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.format_cmb.sizePolicy().hasHeightForWidth())
        self.format_cmb.setSizePolicy(sizePolicy)
        self.format_cmb.setFrame(False)
        self.format_cmb.setObjectName("format_cmb")
        self.format_cmb.addItem("")
        self.format_cmb.addItem("")
        self.format_cmb.addItem("")
        self.output_file_lyt.addWidget(self.format_cmb)
        self.label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setObjectName("label")
        self.output_file_lyt.addWidget(self.label)
        self.bitdepth_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bitdepth_cmb.sizePolicy().hasHeightForWidth())
        self.bitdepth_cmb.setSizePolicy(sizePolicy)
        self.bitdepth_cmb.setFrame(False)
        self.bitdepth_cmb.setObjectName("bitdepth_cmb")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.output_file_lyt.addWidget(self.bitdepth_cmb)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.output_file_lyt.addItem(spacerItem3)
        self.add_suffix_cb = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add_suffix_cb.sizePolicy().hasHeightForWidth())
        self.add_suffix_cb.setSizePolicy(sizePolicy)
        self.add_suffix_cb.setChecked(True)
        self.add_suffix_cb.setObjectName("add_suffix_cb")
        self.output_file_lyt.addWidget(self.add_suffix_cb)
        self.suffix_le = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suffix_le.sizePolicy().hasHeightForWidth())
        self.suffix_le.setSizePolicy(sizePolicy)
        self.suffix_le.setMaxLength(16)
        self.suffix_le.setFrame(False)
        self.suffix_le.setObjectName("suffix_le")
        self.output_file_lyt.addWidget(self.suffix_le)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.output_file_lyt.addItem(spacerItem4)
        self.no_overwriting_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.no_overwriting_cb.setChecked(True)
        self.no_overwriting_cb.setObjectName("no_overwriting_cb")
        self.output_file_lyt.addWidget(self.no_overwriting_cb)
        self.verticalLayout.addLayout(self.output_file_lyt)
        self.trim_after_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.trim_after_cb.setObjectName("trim_after_cb")
        self.verticalLayout.addWidget(self.trim_after_cb)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.buttons_lyt = QtWidgets.QGridLayout()
        self.buttons_lyt.setObjectName("buttons_lyt")
        self.process_sel_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_sel_pb.sizePolicy().hasHeightForWidth())
        self.process_sel_pb.setSizePolicy(sizePolicy)
        self.process_sel_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.process_sel_pb.setFont(font)
        self.process_sel_pb.setObjectName("process_sel_pb")
        self.buttons_lyt.addWidget(self.process_sel_pb, 0, 1, 1, 1)
        self.preview_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.preview_pb.sizePolicy().hasHeightForWidth())
        self.preview_pb.setSizePolicy(sizePolicy)
        self.preview_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.preview_pb.setFont(font)
        self.preview_pb.setObjectName("preview_pb")
        self.buttons_lyt.addWidget(self.preview_pb, 0, 0, 1, 1)
        self.process_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_pb.sizePolicy().hasHeightForWidth())
        self.process_pb.setSizePolicy(sizePolicy)
        self.process_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.process_pb.setFont(font)
        self.process_pb.setStyleSheet("QPushButton{background-color: rgb(31, 159, 127);\n"
"color: rgb(255, 255, 255);}")
        self.process_pb.setObjectName("process_pb")
        self.buttons_lyt.addWidget(self.process_pb, 1, 1, 1, 1)
        self.verticalLayout.addLayout(self.buttons_lyt)
        self.progress_pb = QtWidgets.QProgressBar(self.centralwidget)
        self.progress_pb.setStyleSheet("QProgressBar{border: none;}")
        self.progress_pb.setProperty("value", 0)
        self.progress_pb.setAlignment(QtCore.Qt.AlignCenter)
        self.progress_pb.setTextVisible(False)
        self.progress_pb.setFormat("")
        self.progress_pb.setObjectName("progress_pb")
        self.verticalLayout.addWidget(self.progress_pb)
        loop_tool_mw.setCentralWidget(self.centralwidget)

        self.retranslateUi(loop_tool_mw)
        self.env_mode_cmb.setCurrentIndex(0)
        self.fade_mode_cmb.setCurrentIndex(0)
        self.resynth_freq_mode_cmb.setCurrentIndex(1)
        self.resynth_mix_cmb.setCurrentIndex(1)
        self.format_cmb.setCurrentIndex(0)
        self.bitdepth_cmb.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(loop_tool_mw)

    def retranslateUi(self, loop_tool_mw):
        _translate = QtCore.QCoreApplication.translate
        loop_tool_mw.setWindowTitle(_translate("loop_tool_mw", "Loop Tool"))
        self.files_title_l.setText(_translate("loop_tool_mw", "Input Files"))
        self.files_lw.setToolTip(_translate("loop_tool_mw", "Drag and drop files or directories\n"
"Right click for context actions\n"
"\n"
"Double-click to play selected file unlooped\n"
"\n"
"SPACE BAR to play/stop selected file LOOPED"))
        self.set_files_tb.setToolTip(_translate("loop_tool_mw", "Set files to process"))
        self.set_files_tb.setText(_translate("loop_tool_mw", "..."))
        self.options_title_l.setText(_translate("loop_tool_mw", "Options"))
        self.env_shaping_cb.setToolTip(_translate("loop_tool_mw", "Invert audio envelope, flattening the amplitude\n"
"May help  looping the sound\n"
"Enable cross-fade to use the \'mask\' \'loop\' setting\n"
"\n"
"Does alter audio data"))
        self.env_shaping_cb.setText(_translate("loop_tool_mw", "Envelope Shaping"))
        self.env_mask_l.setText(_translate("loop_tool_mw", "Mask"))
        self.env_mode_cmb.setToolTip(_translate("loop_tool_mw", "\'loop\'    Apply effect  within loop region only\n"
"\'full\'    Apply everywhere"))
        self.env_mode_cmb.setItemText(0, _translate("loop_tool_mw", "loop"))
        self.env_mode_cmb.setItemText(1, _translate("loop_tool_mw", "full"))
        self.env_th_l.setText(_translate("loop_tool_mw", "Threshold"))
        self.env_th_dsb.setToolTip(_translate("loop_tool_mw", "Shaping begins below this volume threshold in dB"))
        self.env_min_l.setText(_translate("loop_tool_mw", "Minimum"))
        self.env_min_dsb.setToolTip(_translate("loop_tool_mw", "Shaping ends below this volume threshold in dB"))
        self.env_window_l.setText(_translate("loop_tool_mw", "Envelope Window"))
        self.env_window_dsb.setToolTip(_translate("loop_tool_mw", "Window size of envelope transform used for envelope shaping\n"
"\n"
"Higher value, looser correction but more natural sounding\n"
"Lower walue, tighter correction but may sound more distorted"))
        self.detect_loop_cb.setToolTip(_translate("loop_tool_mw", "Overwrites any pre-existing loop data\n"
"Using \'Detect-Loop\' only does not alter audio data"))
        self.detect_loop_cb.setText(_translate("loop_tool_mw", "Detect Loop"))
        self.loop_min_length_l.setText(_translate("loop_tool_mw", "Min Length"))
        self.loop_min_length_dsb.setToolTip(_translate("loop_tool_mw", "MINIMUM loop length in ms\n"
"NOTE: if the search can find a loop which is better but much longer it will favor it"))
        self.cues_l.setText(_translate("loop_tool_mw", "Candidates"))
        self.cues_sb.setToolTip(_translate("loop_tool_mw", "Maximum number of cue combinations used to perform the loop search\n"
"The bigger the longer"))
        self.loop_window_l.setText(_translate("loop_tool_mw", "Window"))
        self.loop_window_dsb.setToolTip(_translate("loop_tool_mw", "Loop search window size in ms\n"
"\n"
"A larger window can be better for low frequency content but is longer to search\n"
"For high notes or high frequency content, try to reduce value below 10ms"))
        self.window_offset_l.setText(_translate("loop_tool_mw", "Offset"))
        self.window_offset_dsb.setToolTip(_translate("loop_tool_mw", "0    backward, allow loop end very close to end of sample\n"
"0.5    centered (Default) \n"
"1    forward, allow loop start very close to start of sample"))
        self.hash_search_cb.setToolTip(_translate("loop_tool_mw", "Detect \"perfect\" binary repeat\n"
"Useful to detect loop in preprocessed audio where perfect a loop is likely present\n"
"Add some overhead dependent on the file size"))
        self.hash_search_cb.setText(_translate("loop_tool_mw", "1st Pass Hash Search"))
        self.range_limits_cb.setToolTip(_translate("loop_tool_mw", "Apply constraints to loop search scope"))
        self.range_limits_cb.setText(_translate("loop_tool_mw", "Range Limits"))
        self.start_range_l.setText(_translate("loop_tool_mw", "Start Range"))
        self.start_range_dsb.setToolTip(_translate("loop_tool_mw", "Restrict loop start before this point (percent)\n"
"Set to 1 to disable restriction"))
        self.end_range_l.setText(_translate("loop_tool_mw", "End Range"))
        self.end_range_dsb.setToolTip(_translate("loop_tool_mw", "Restrict loop end after this point (percent)\n"
"Set to 0 to disable restriction"))
        self.crossfade_cb.setToolTip(_translate("loop_tool_mw", "Create a smoother transition by fading the sample over itself\n"
"Does alter audio data"))
        self.crossfade_cb.setText(_translate("loop_tool_mw", "Cross-Fade"))
        self.fd_preview_only_cb.setToolTip(_translate("loop_tool_mw", "Enable cross-fade for preview only\n"
"\n"
"Cross-fade features exist in most sampler VSTi\n"
"This option allows to preview the cross-faded result without baking it in the processed files"))
        self.fd_preview_only_cb.setText(_translate("loop_tool_mw", "Preview Only"))
        self.fade_mode_l.setText(_translate("loop_tool_mw", "Fade Mode"))
        self.fade_mode_cmb.setToolTip(_translate("loop_tool_mw", "Fade in/out interpolation type"))
        self.fade_mode_cmb.setItemText(0, _translate("loop_tool_mw", "linear"))
        self.fade_mode_cmb.setItemText(1, _translate("loop_tool_mw", "smoothstep"))
        self.fade_mode_cmb.setItemText(2, _translate("loop_tool_mw", "exp"))
        self.fade_in_l.setText(_translate("loop_tool_mw", "Fade In"))
        self.fade_in_dsb.setToolTip(_translate("loop_tool_mw", "Length in percent of loop length\n"
"Values over 1.0 may help for very short loops (a few periods)"))
        self.fade_out_l.setText(_translate("loop_tool_mw", "Fade Out"))
        self.fade_out_dsb.setToolTip(_translate("loop_tool_mw", "Fading of the looped region after loop end\n"
"Length in percent of loop length"))
        self.resynth_cb.setToolTip(_translate("loop_tool_mw", "Re-synthesize audio from FFT analysis\n"
"As a side effect of the FFT re-synthesis, the synthesized part will loop seamlessly\n"
"Overrides loop points"))
        self.resynth_cb.setText(_translate("loop_tool_mw", "Re-Synthesis"))
        self.fft_range_l.setText(_translate("loop_tool_mw", "FFT Range"))
        self.fft_range_cmb.setToolTip(_translate("loop_tool_mw", "\'from_loop\'    Use loop points as range for FFT analysis"))
        self.fft_range_cmb.setItemText(0, _translate("loop_tool_mw", "custom"))
        self.fft_range_cmb.setItemText(1, _translate("loop_tool_mw", "from_loop"))
        self.fft_start_l.setText(_translate("loop_tool_mw", "Start"))
        self.fft_start_dsb.setToolTip(_translate("loop_tool_mw", "Start of FFT analysis in percent of of input audio length"))
        self.fft_size_l.setText(_translate("loop_tool_mw", "FFT Size"))
        self.fft_size_dsb.setToolTip(_translate("loop_tool_mw", "FFT analysis length in percent of of input audio length\n"
"\n"
"The shorter the coarser, more \"noise-like\" the result\n"
"The longer the smoother, more diluted the result, better for low frequencies"))
        self.duration_l.setText(_translate("loop_tool_mw", "Duration"))
        self.resynth_duration_dsb.setToolTip(_translate("loop_tool_mw", "Re-synthesis duration in s\n"
"This also will be the resulting loop lentgh"))
        self.resynth_freq_mode_l.setText(_translate("loop_tool_mw", "Frequency"))
        self.resynth_freq_mode_cmb.setToolTip(_translate("loop_tool_mw", "Fundamental frequency source\n"
"The full harmonic series from fundamental will preserve its phase and will compose the \"tonal\" part\n"
"\n"
"\'note\'        Frequency from sample note\n"
"\'note_pf\'        note + pitch fraction (default)\n"
"\'custom\'        Specify arbitrary frequency with \'freqs\'\n"
"\n"
"This is important when mixing synthesized part with original input so both are in phase and the transition feels more natural"))
        self.resynth_freq_mode_cmb.setItemText(0, _translate("loop_tool_mw", "note"))
        self.resynth_freq_mode_cmb.setItemText(1, _translate("loop_tool_mw", "note_pf"))
        self.resynth_freq_mode_cmb.setItemText(2, _translate("loop_tool_mw", "custom"))
        self.freqs_l.setText(_translate("loop_tool_mw", "Freqs"))
        self.freqs_le.setToolTip(_translate("loop_tool_mw", "List of note names or frequencies separated by spaces or commas"))
        self.atonal_mix_l.setText(_translate("loop_tool_mw", "Atonal Mix"))
        self.atonal_mix_dsb.setToolTip(_translate("loop_tool_mw", "Atonal part amplitude\n"
"Balance \"Tonal\" (Fundamental frequency) VS \"Atonal\" (Noise) part of the sound\n"
"Has no effect with no fundamental frequency set\n"
"\n"
"0: Pure tonal frequency, may sound very artificial\n"
"1: Can sound a bit \'chorusy\' or \'verby\'"))
        self.resynth_mix_l.setText(_translate("loop_tool_mw", "Mix"))
        self.resynth_mix_cmb.setToolTip(_translate("loop_tool_mw", "Mix re-synthesized audio with original input\n"
"\n"
"\'all\'    Replace everything with re-synth\n"
"\'loop_tail\'    Keep original attack only\n"
"\'loop\'    Keep original attack and tail"))
        self.resynth_mix_cmb.setItemText(0, _translate("loop_tool_mw", "all"))
        self.resynth_mix_cmb.setItemText(1, _translate("loop_tool_mw", "loop_tail"))
        self.resynth_mix_cmb.setItemText(2, _translate("loop_tool_mw", "loop"))
        self.resynth_fade_in_l.setText(_translate("loop_tool_mw", "Fade In"))
        self.resynth_fade_in_dsb.setToolTip(_translate("loop_tool_mw", "Fading of the synthesized part before loop start\n"
"Length in percent of loop length"))
        self.resynth_fade_out_l.setText(_translate("loop_tool_mw", "Fade Out"))
        self.resynth_fade_out_dsb.setToolTip(_translate("loop_tool_mw", "Fading of the synthesized part after loop end\n"
"Length in percent of loop length"))
        self.st_width_l.setText(_translate("loop_tool_mw", "Stereo Width"))
        self.st_width_dsb.setToolTip(_translate("loop_tool_mw", "Stereo effect width when using Re-synth mix \'all\'\n"
"With this mode left and right channels use a different random seed"))
        self.output_path_title_l.setText(_translate("loop_tool_mw", "Output Path"))
        self.set_output_path_tb.setToolTip(_translate("loop_tool_mw", "Set output path\n"
"Process files in their respective directory if empty"))
        self.set_output_path_tb.setText(_translate("loop_tool_mw", "..."))
        self.settings_title_l.setText(_translate("loop_tool_mw", "File Settings"))
        self.label_2.setText(_translate("loop_tool_mw", "Format"))
        self.format_cmb.setToolTip(_translate("loop_tool_mw", "flac only allows integer format up to 24 bits\n"
"Use wav for 32 bits float"))
        self.format_cmb.setItemText(0, _translate("loop_tool_mw", "same"))
        self.format_cmb.setItemText(1, _translate("loop_tool_mw", "wav"))
        self.format_cmb.setItemText(2, _translate("loop_tool_mw", "flac"))
        self.label.setText(_translate("loop_tool_mw", "Bit Depth"))
        self.bitdepth_cmb.setItemText(0, _translate("loop_tool_mw", "same"))
        self.bitdepth_cmb.setItemText(1, _translate("loop_tool_mw", "16"))
        self.bitdepth_cmb.setItemText(2, _translate("loop_tool_mw", "24"))
        self.bitdepth_cmb.setItemText(3, _translate("loop_tool_mw", "32"))
        self.add_suffix_cb.setText(_translate("loop_tool_mw", "Add suffix"))
        self.suffix_le.setToolTip(_translate("loop_tool_mw", "Suffix added to the base name"))
        self.suffix_le.setText(_translate("loop_tool_mw", "_looped"))
        self.no_overwriting_cb.setToolTip(_translate("loop_tool_mw", "Avoid overwriting original files by moving them to a backup directory"))
        self.no_overwriting_cb.setText(_translate("loop_tool_mw", "Avoid Overwriting"))
        self.trim_after_cb.setToolTip(_translate("loop_tool_mw", "Reduce sample size by discarding data after the loop end"))
        self.trim_after_cb.setText(_translate("loop_tool_mw", "Trim after loop end"))
        self.process_sel_pb.setToolTip(_translate("loop_tool_mw", "Process selected item(s) with current settings"))
        self.process_sel_pb.setText(_translate("loop_tool_mw", "Process Selected"))
        self.preview_pb.setToolTip(_translate("loop_tool_mw", "Apply current settings to selected item\n"
"and play the result without writing anything"))
        self.preview_pb.setText(_translate("loop_tool_mw", "Preview Selected"))
        self.process_pb.setToolTip(_translate("loop_tool_mw", "Process all input files with current settings"))
        self.process_pb.setText(_translate("loop_tool_mw", "Batch Process"))
