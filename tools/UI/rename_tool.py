# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\mitch\Documents\PycharmProjects\github\sample_tools\tools\UI\rename_tool.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_rename_tool_mw(object):
    def setupUi(self, rename_tool_mw):
        rename_tool_mw.setObjectName("rename_tool_mw")
        rename_tool_mw.resize(800, 800)
        rename_tool_mw.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.centralwidget = QtWidgets.QWidget(rename_tool_mw)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.files_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.files_title_l.sizePolicy().hasHeightForWidth())
        self.files_title_l.setSizePolicy(sizePolicy)
        self.files_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.files_title_l.setStyleSheet("background-color: rgb(159, 95, 95);\n"
"color: rgb(255, 255, 255);")
        self.files_title_l.setObjectName("files_title_l")
        self.verticalLayout.addWidget(self.files_title_l)
        self.files_lyt = QtWidgets.QHBoxLayout()
        self.files_lyt.setObjectName("files_lyt")
        self.files_lw = QtWidgets.QListWidget(self.centralwidget)
        self.files_lw.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.files_lw.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.files_lw.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.files_lw.setObjectName("files_lw")
        self.files_lyt.addWidget(self.files_lw)
        self.set_files_tb = QtWidgets.QToolButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.set_files_tb.setFont(font)
        self.set_files_tb.setObjectName("set_files_tb")
        self.files_lyt.addWidget(self.set_files_tb)
        self.verticalLayout.addLayout(self.files_lyt)
        self.naming_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.naming_title_l.sizePolicy().hasHeightForWidth())
        self.naming_title_l.setSizePolicy(sizePolicy)
        self.naming_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.naming_title_l.setStyleSheet("background-color: rgb(159, 95, 95);\n"
"color: rgb(255, 255, 255);")
        self.naming_title_l.setObjectName("naming_title_l")
        self.verticalLayout.addWidget(self.naming_title_l)
        self.basename_lyt = QtWidgets.QHBoxLayout()
        self.basename_lyt.setObjectName("basename_lyt")
        self.groupname_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupname_l.sizePolicy().hasHeightForWidth())
        self.groupname_l.setSizePolicy(sizePolicy)
        self.groupname_l.setMinimumSize(QtCore.QSize(128, 0))
        self.groupname_l.setAlignment(QtCore.Qt.AlignCenter)
        self.groupname_l.setObjectName("groupname_l")
        self.basename_lyt.addWidget(self.groupname_l)
        self.groupname_le = QtWidgets.QLineEdit(self.centralwidget)
        self.groupname_le.setText("")
        self.groupname_le.setFrame(False)
        self.groupname_le.setAlignment(QtCore.Qt.AlignCenter)
        self.groupname_le.setObjectName("groupname_le")
        self.basename_lyt.addWidget(self.groupname_le)
        self.repstr_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.repstr_l.sizePolicy().hasHeightForWidth())
        self.repstr_l.setSizePolicy(sizePolicy)
        self.repstr_l.setMinimumSize(QtCore.QSize(128, 0))
        self.repstr_l.setAlignment(QtCore.Qt.AlignCenter)
        self.repstr_l.setObjectName("repstr_l")
        self.basename_lyt.addWidget(self.repstr_l)
        self.repstr_le = QtWidgets.QLineEdit(self.centralwidget)
        self.repstr_le.setText("")
        self.repstr_le.setFrame(False)
        self.repstr_le.setAlignment(QtCore.Qt.AlignCenter)
        self.repstr_le.setObjectName("repstr_le")
        self.basename_lyt.addWidget(self.repstr_le)
        self.verticalLayout.addLayout(self.basename_lyt)
        self.pattern_lyt = QtWidgets.QHBoxLayout()
        self.pattern_lyt.setObjectName("pattern_lyt")
        self.src_pattern_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.src_pattern_pb.sizePolicy().hasHeightForWidth())
        self.src_pattern_pb.setSizePolicy(sizePolicy)
        self.src_pattern_pb.setMinimumSize(QtCore.QSize(128, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.src_pattern_pb.setFont(font)
        self.src_pattern_pb.setObjectName("src_pattern_pb")
        self.pattern_lyt.addWidget(self.src_pattern_pb)
        self.src_pattern_le = QtWidgets.QLineEdit(self.centralwidget)
        self.src_pattern_le.setText("")
        self.src_pattern_le.setFrame(False)
        self.src_pattern_le.setAlignment(QtCore.Qt.AlignCenter)
        self.src_pattern_le.setObjectName("src_pattern_le")
        self.pattern_lyt.addWidget(self.src_pattern_le)
        self.tgt_pattern_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tgt_pattern_pb.sizePolicy().hasHeightForWidth())
        self.tgt_pattern_pb.setSizePolicy(sizePolicy)
        self.tgt_pattern_pb.setMinimumSize(QtCore.QSize(128, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.tgt_pattern_pb.setFont(font)
        self.tgt_pattern_pb.setObjectName("tgt_pattern_pb")
        self.pattern_lyt.addWidget(self.tgt_pattern_pb)
        self.tgt_pattern_le = QtWidgets.QLineEdit(self.centralwidget)
        self.tgt_pattern_le.setText("")
        self.tgt_pattern_le.setFrame(False)
        self.tgt_pattern_le.setAlignment(QtCore.Qt.AlignCenter)
        self.tgt_pattern_le.setObjectName("tgt_pattern_le")
        self.pattern_lyt.addWidget(self.tgt_pattern_le)
        self.verticalLayout.addLayout(self.pattern_lyt)
        self.presuffix_lyt = QtWidgets.QHBoxLayout()
        self.presuffix_lyt.setObjectName("presuffix_lyt")
        self.prefix_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.prefix_l.sizePolicy().hasHeightForWidth())
        self.prefix_l.setSizePolicy(sizePolicy)
        self.prefix_l.setMinimumSize(QtCore.QSize(128, 0))
        self.prefix_l.setAlignment(QtCore.Qt.AlignCenter)
        self.prefix_l.setObjectName("prefix_l")
        self.presuffix_lyt.addWidget(self.prefix_l)
        self.prefix_le = QtWidgets.QLineEdit(self.centralwidget)
        self.prefix_le.setText("")
        self.prefix_le.setFrame(False)
        self.prefix_le.setAlignment(QtCore.Qt.AlignCenter)
        self.prefix_le.setObjectName("prefix_le")
        self.presuffix_lyt.addWidget(self.prefix_le)
        self.suffix_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suffix_l.sizePolicy().hasHeightForWidth())
        self.suffix_l.setSizePolicy(sizePolicy)
        self.suffix_l.setMinimumSize(QtCore.QSize(128, 0))
        self.suffix_l.setAlignment(QtCore.Qt.AlignCenter)
        self.suffix_l.setObjectName("suffix_l")
        self.presuffix_lyt.addWidget(self.suffix_l)
        self.suffix_le = QtWidgets.QLineEdit(self.centralwidget)
        self.suffix_le.setText("")
        self.suffix_le.setFrame(False)
        self.suffix_le.setAlignment(QtCore.Qt.AlignCenter)
        self.suffix_le.setObjectName("suffix_le")
        self.presuffix_lyt.addWidget(self.suffix_le)
        self.verticalLayout.addLayout(self.presuffix_lyt)
        self.note_loop_title = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.note_loop_title.sizePolicy().hasHeightForWidth())
        self.note_loop_title.setSizePolicy(sizePolicy)
        self.note_loop_title.setMinimumSize(QtCore.QSize(64, 0))
        self.note_loop_title.setStyleSheet("background-color: rgb(159, 95, 95);\n"
"color: rgb(255, 255, 255);")
        self.note_loop_title.setObjectName("note_loop_title")
        self.verticalLayout.addWidget(self.note_loop_title)
        self.note_lyt = QtWidgets.QHBoxLayout()
        self.note_lyt.setObjectName("note_lyt")
        self.force_pitch_name_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.force_pitch_name_cb.setChecked(False)
        self.force_pitch_name_cb.setObjectName("force_pitch_name_cb")
        self.note_lyt.addWidget(self.force_pitch_name_cb)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.note_lyt.addItem(spacerItem)
        self.pitch_detect_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.pitch_detect_cb.setObjectName("pitch_detect_cb")
        self.note_lyt.addWidget(self.pitch_detect_cb)
        self.pitch_mode_cmb = QtWidgets.QComboBox(self.centralwidget)
        self.pitch_mode_cmb.setEnabled(False)
        self.pitch_mode_cmb.setObjectName("pitch_mode_cmb")
        self.pitch_mode_cmb.addItem("")
        self.pitch_mode_cmb.addItem("")
        self.note_lyt.addWidget(self.pitch_mode_cmb)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.note_lyt.addItem(spacerItem1)
        self.pitch_fraction_l = QtWidgets.QLabel(self.centralwidget)
        self.pitch_fraction_l.setObjectName("pitch_fraction_l")
        self.note_lyt.addWidget(self.pitch_fraction_l)
        self.pitch_fraction_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pitch_fraction_cmb.sizePolicy().hasHeightForWidth())
        self.pitch_fraction_cmb.setSizePolicy(sizePolicy)
        self.pitch_fraction_cmb.setFrame(False)
        self.pitch_fraction_cmb.setObjectName("pitch_fraction_cmb")
        self.pitch_fraction_cmb.addItem("")
        self.pitch_fraction_cmb.addItem("")
        self.pitch_fraction_cmb.addItem("")
        self.note_lyt.addWidget(self.pitch_fraction_cmb)
        self.pitchfraction_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.pitchfraction_dsb.setEnabled(False)
        self.pitchfraction_dsb.setFrame(False)
        self.pitchfraction_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.pitchfraction_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.pitchfraction_dsb.setMinimum(-100.0)
        self.pitchfraction_dsb.setMaximum(100.0)
        self.pitchfraction_dsb.setObjectName("pitchfraction_dsb")
        self.note_lyt.addWidget(self.pitchfraction_dsb)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.note_lyt.addItem(spacerItem2)
        self.transpose_l = QtWidgets.QLabel(self.centralwidget)
        self.transpose_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.transpose_l.setObjectName("transpose_l")
        self.note_lyt.addWidget(self.transpose_l)
        self.transpose_sb = QtWidgets.QSpinBox(self.centralwidget)
        self.transpose_sb.setFrame(False)
        self.transpose_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.transpose_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.transpose_sb.setMinimum(-127)
        self.transpose_sb.setMaximum(127)
        self.transpose_sb.setObjectName("transpose_sb")
        self.note_lyt.addWidget(self.transpose_sb)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.note_lyt.addItem(spacerItem3)
        self.use_loop_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.use_loop_cb.setChecked(True)
        self.use_loop_cb.setObjectName("use_loop_cb")
        self.note_lyt.addWidget(self.use_loop_cb)
        self.verticalLayout.addLayout(self.note_lyt)
        self.bake_pf_title = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bake_pf_title.sizePolicy().hasHeightForWidth())
        self.bake_pf_title.setSizePolicy(sizePolicy)
        self.bake_pf_title.setMinimumSize(QtCore.QSize(64, 0))
        self.bake_pf_title.setStyleSheet("background-color: rgb(159, 95, 95);\n"
"color: rgb(255, 255, 255);")
        self.bake_pf_title.setObjectName("bake_pf_title")
        self.verticalLayout.addWidget(self.bake_pf_title)
        self.bake_pf_lyt = QtWidgets.QHBoxLayout()
        self.bake_pf_lyt.setObjectName("bake_pf_lyt")
        self.bake_pf_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.bake_pf_cb.setObjectName("bake_pf_cb")
        self.bake_pf_lyt.addWidget(self.bake_pf_cb)
        self.pf_mode_wid = QtWidgets.QWidget(self.centralwidget)
        self.pf_mode_wid.setEnabled(False)
        self.pf_mode_wid.setObjectName("pf_mode_wid")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.pf_mode_wid)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pf_mode_l = QtWidgets.QLabel(self.pf_mode_wid)
        self.pf_mode_l.setObjectName("pf_mode_l")
        self.horizontalLayout.addWidget(self.pf_mode_l)
        self.pf_mode_cmb = QtWidgets.QComboBox(self.pf_mode_wid)
        self.pf_mode_cmb.setFrame(False)
        self.pf_mode_cmb.setObjectName("pf_mode_cmb")
        self.pf_mode_cmb.addItem("")
        self.pf_mode_cmb.addItem("")
        self.horizontalLayout.addWidget(self.pf_mode_cmb)
        self.pf_th_dsb = QtWidgets.QDoubleSpinBox(self.pf_mode_wid)
        self.pf_th_dsb.setEnabled(False)
        self.pf_th_dsb.setFrame(False)
        self.pf_th_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.pf_th_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.pf_th_dsb.setDecimals(3)
        self.pf_th_dsb.setMaximum(100.0)
        self.pf_th_dsb.setProperty("value", 2.5)
        self.pf_th_dsb.setObjectName("pf_th_dsb")
        self.horizontalLayout.addWidget(self.pf_th_dsb)
        self.bake_pf_lyt.addWidget(self.pf_mode_wid)
        self.verticalLayout.addLayout(self.bake_pf_lyt)
        self.output_path_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_path_title_l.sizePolicy().hasHeightForWidth())
        self.output_path_title_l.setSizePolicy(sizePolicy)
        self.output_path_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.output_path_title_l.setStyleSheet("background-color: rgb(159, 95, 95);\n"
"color: rgb(255, 255, 255);")
        self.output_path_title_l.setObjectName("output_path_title_l")
        self.verticalLayout.addWidget(self.output_path_title_l)
        self.output_path_lyt = QtWidgets.QHBoxLayout()
        self.output_path_lyt.setObjectName("output_path_lyt")
        self.output_path_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_path_l.sizePolicy().hasHeightForWidth())
        self.output_path_l.setSizePolicy(sizePolicy)
        self.output_path_l.setText("")
        self.output_path_l.setObjectName("output_path_l")
        self.output_path_lyt.addWidget(self.output_path_l)
        self.set_output_path_tb = QtWidgets.QToolButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.set_output_path_tb.setFont(font)
        self.set_output_path_tb.setObjectName("set_output_path_tb")
        self.output_path_lyt.addWidget(self.set_output_path_tb)
        self.verticalLayout.addLayout(self.output_path_lyt)
        self.settings_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.settings_title_l.sizePolicy().hasHeightForWidth())
        self.settings_title_l.setSizePolicy(sizePolicy)
        self.settings_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.settings_title_l.setStyleSheet("background-color: rgb(159, 95, 95);\n"
"color: rgb(255, 255, 255);")
        self.settings_title_l.setObjectName("settings_title_l")
        self.verticalLayout.addWidget(self.settings_title_l)
        self.output_file_lyt = QtWidgets.QHBoxLayout()
        self.output_file_lyt.setObjectName("output_file_lyt")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setObjectName("label_2")
        self.output_file_lyt.addWidget(self.label_2)
        self.format_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.format_cmb.sizePolicy().hasHeightForWidth())
        self.format_cmb.setSizePolicy(sizePolicy)
        self.format_cmb.setFrame(False)
        self.format_cmb.setObjectName("format_cmb")
        self.format_cmb.addItem("")
        self.format_cmb.addItem("")
        self.format_cmb.addItem("")
        self.output_file_lyt.addWidget(self.format_cmb)
        self.label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setObjectName("label")
        self.output_file_lyt.addWidget(self.label)
        self.bitdepth_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bitdepth_cmb.sizePolicy().hasHeightForWidth())
        self.bitdepth_cmb.setSizePolicy(sizePolicy)
        self.bitdepth_cmb.setFrame(False)
        self.bitdepth_cmb.setObjectName("bitdepth_cmb")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.output_file_lyt.addWidget(self.bitdepth_cmb)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.output_file_lyt.addItem(spacerItem4)
        self.bake_pf_options_wid = QtWidgets.QWidget(self.centralwidget)
        self.bake_pf_options_wid.setEnabled(False)
        self.bake_pf_options_wid.setObjectName("bake_pf_options_wid")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.bake_pf_options_wid)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setSpacing(0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.add_suffix_cb = QtWidgets.QCheckBox(self.bake_pf_options_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add_suffix_cb.sizePolicy().hasHeightForWidth())
        self.add_suffix_cb.setSizePolicy(sizePolicy)
        self.add_suffix_cb.setChecked(True)
        self.add_suffix_cb.setObjectName("add_suffix_cb")
        self.horizontalLayout_2.addWidget(self.add_suffix_cb)
        self.add_suffix_le = QtWidgets.QLineEdit(self.bake_pf_options_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add_suffix_le.sizePolicy().hasHeightForWidth())
        self.add_suffix_le.setSizePolicy(sizePolicy)
        self.add_suffix_le.setMaxLength(16)
        self.add_suffix_le.setFrame(False)
        self.add_suffix_le.setObjectName("add_suffix_le")
        self.horizontalLayout_2.addWidget(self.add_suffix_le)
        spacerItem5 = QtWidgets.QSpacerItem(116, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem5)
        self.no_overwriting_cb = QtWidgets.QCheckBox(self.bake_pf_options_wid)
        self.no_overwriting_cb.setChecked(True)
        self.no_overwriting_cb.setObjectName("no_overwriting_cb")
        self.horizontalLayout_2.addWidget(self.no_overwriting_cb)
        self.output_file_lyt.addWidget(self.bake_pf_options_wid)
        self.verticalLayout.addLayout(self.output_file_lyt)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.buttons_lyt = QtWidgets.QGridLayout()
        self.buttons_lyt.setObjectName("buttons_lyt")
        self.process_sel_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_sel_pb.sizePolicy().hasHeightForWidth())
        self.process_sel_pb.setSizePolicy(sizePolicy)
        self.process_sel_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.process_sel_pb.setFont(font)
        self.process_sel_pb.setObjectName("process_sel_pb")
        self.buttons_lyt.addWidget(self.process_sel_pb, 0, 0, 1, 1)
        self.process_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_pb.sizePolicy().hasHeightForWidth())
        self.process_pb.setSizePolicy(sizePolicy)
        self.process_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.process_pb.setFont(font)
        self.process_pb.setStyleSheet("QPushButton{background-color: rgb(159, 95, 95);\n"
"color: rgb(255, 255, 255);}")
        self.process_pb.setDefault(False)
        self.process_pb.setObjectName("process_pb")
        self.buttons_lyt.addWidget(self.process_pb, 1, 0, 1, 1)
        self.verticalLayout.addLayout(self.buttons_lyt)
        self.progress_pb = QtWidgets.QProgressBar(self.centralwidget)
        self.progress_pb.setStyleSheet("QProgressBar{border: none;}")
        self.progress_pb.setProperty("value", 0)
        self.progress_pb.setAlignment(QtCore.Qt.AlignCenter)
        self.progress_pb.setTextVisible(False)
        self.progress_pb.setFormat("")
        self.progress_pb.setObjectName("progress_pb")
        self.verticalLayout.addWidget(self.progress_pb)
        rename_tool_mw.setCentralWidget(self.centralwidget)

        self.retranslateUi(rename_tool_mw)
        self.pitch_fraction_cmb.setCurrentIndex(0)
        self.pf_mode_cmb.setCurrentIndex(0)
        self.format_cmb.setCurrentIndex(0)
        self.bitdepth_cmb.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(rename_tool_mw)

    def retranslateUi(self, rename_tool_mw):
        _translate = QtCore.QCoreApplication.translate
        rename_tool_mw.setWindowTitle(_translate("rename_tool_mw", "Rename Sample Tool"))
        self.files_title_l.setText(_translate("rename_tool_mw", "Input Files"))
        self.files_lw.setToolTip(_translate("rename_tool_mw", "Drag and drop files or directories\n"
"Right click for context actions\n"
"Double-click to play"))
        self.set_files_tb.setToolTip(_translate("rename_tool_mw", "Set files to process"))
        self.set_files_tb.setText(_translate("rename_tool_mw", "..."))
        self.naming_title_l.setText(_translate("rename_tool_mw", "Naming"))
        self.groupname_l.setText(_translate("rename_tool_mw", "Group Name"))
        self.groupname_le.setToolTip(_translate("rename_tool_mw", "Override group/base name"))
        self.repstr_l.setText(_translate("rename_tool_mw", "Search/Replace"))
        self.repstr_le.setToolTip(_translate("rename_tool_mw", "Enter 2 words separated by commas\n"
"The 1st word is replaced by the 2nd\n"
"The token is then available using {repstr} in the target pattern"))
        self.src_pattern_pb.setToolTip(_translate("rename_tool_mw", "Pattern used to convert sample names to attribute values\n"
"Click for context menu and some pattern examples"))
        self.src_pattern_pb.setText(_translate("rename_tool_mw", "Source Pattern"))
        self.src_pattern_le.setToolTip(_translate("rename_tool_mw", "Extract attributes following this pattern\n"
"Attributes names enclosed in curly braces {}"))
        self.tgt_pattern_pb.setToolTip(_translate("rename_tool_mw", "Pattern used to compose file names from attributes\n"
"Click for context menu and some pattern examples"))
        self.tgt_pattern_pb.setText(_translate("rename_tool_mw", "Target Pattern"))
        self.tgt_pattern_le.setToolTip(_translate("rename_tool_mw", "Recompose attributes following this pattern\n"
"Attributes names enclosed in curly braces {}"))
        self.prefix_l.setText(_translate("rename_tool_mw", "Prefix"))
        self.suffix_l.setText(_translate("rename_tool_mw", "Suffix"))
        self.note_loop_title.setText(_translate("rename_tool_mw", "Note/Loop"))
        self.force_pitch_name_cb.setToolTip(_translate("rename_tool_mw", "Attempt to read the note from the whole sample name\n"
"Might work even when the name is badly formatted"))
        self.force_pitch_name_cb.setText(_translate("rename_tool_mw", "Force Note From Name"))
        self.pitch_detect_cb.setToolTip(_translate("rename_tool_mw", "Override any existing pitch information"))
        self.pitch_detect_cb.setText(_translate("rename_tool_mw", "Pitch Detect"))
        self.pitch_mode_cmb.setToolTip(_translate("rename_tool_mw", "Pitch detection algorithm\n"
"NOTE:    No algorithm is perfect so always double-check results in an audio editor such as Audacity or RX using spectrum/frequency analysis\n"
"    Pitch detection does not work on bell-like sounds\n"
"\n"
"\'yin\'    good results and rather fast, best combined with fine tuning\n"
"\'corr\'    auto-correlation, fastest method but can be wrong about octave"))
        self.pitch_mode_cmb.setItemText(0, _translate("rename_tool_mw", "yin"))
        self.pitch_mode_cmb.setItemText(1, _translate("rename_tool_mw", "corr"))
        self.pitch_fraction_l.setText(_translate("rename_tool_mw", "Pitch Fraction"))
        self.pitch_fraction_cmb.setToolTip(_translate("rename_tool_mw", "keep: use embedded value (if applicable)\n"
"override: replace with a given value\n"
"fine_tune: Detect pitch fraction using autocorrelation"))
        self.pitch_fraction_cmb.setItemText(0, _translate("rename_tool_mw", "keep"))
        self.pitch_fraction_cmb.setItemText(1, _translate("rename_tool_mw", "override"))
        self.pitch_fraction_cmb.setItemText(2, _translate("rename_tool_mw", "fine_tune"))
        self.pitchfraction_dsb.setToolTip(_translate("rename_tool_mw", "Pitch fraction in semitone cents"))
        self.transpose_l.setText(_translate("rename_tool_mw", "Transpose"))
        self.transpose_sb.setToolTip(_translate("rename_tool_mw", "Transpose note in semitones"))
        self.use_loop_cb.setToolTip(_translate("rename_tool_mw", "Use loop if present\n"
"Clear loop information when disabled"))
        self.use_loop_cb.setText(_translate("rename_tool_mw", "Use Loop"))
        self.bake_pf_title.setText(_translate("rename_tool_mw", "Bake Pitch Fraction"))
        self.bake_pf_cb.setToolTip(_translate("rename_tool_mw", "Apply pitch fraction to the samples by resampling\n"
"Allow to use tuned samples with samplers not supporting pitch fraction information\n"
"SoX resamping library with VHQ preset is used for optimal quality\n"
"\n"
"NOTE: As opposed to just adding pitch fraction information, this is a destructive process"))
        self.bake_pf_cb.setText(_translate("rename_tool_mw", "Bake Pitch Fraction"))
        self.pf_mode_l.setText(_translate("rename_tool_mw", "Pitch Fraction Mode"))
        self.pf_mode_cmb.setToolTip(_translate("rename_tool_mw", "Control pitch fraction usage\n"
"\n"
"\'on\'    Use pitch fraction\n"
"\n"
"\'mean_scale\'    Scale deviation from mean to given value\n"
"(results will vary depending on the number of processed samples)"))
        self.pf_mode_cmb.setItemText(0, _translate("rename_tool_mw", "on"))
        self.pf_mode_cmb.setItemText(1, _translate("rename_tool_mw", "mean_scale"))
        self.pf_th_dsb.setToolTip(_translate("rename_tool_mw", "Pitch fraction deviation scale in semitone cents"))
        self.output_path_title_l.setText(_translate("rename_tool_mw", "Output Path"))
        self.set_output_path_tb.setToolTip(_translate("rename_tool_mw", "Set output path\n"
"Process files in their respective directory if empty"))
        self.set_output_path_tb.setText(_translate("rename_tool_mw", "..."))
        self.settings_title_l.setText(_translate("rename_tool_mw", "File Settings"))
        self.label_2.setText(_translate("rename_tool_mw", "Format"))
        self.format_cmb.setToolTip(_translate("rename_tool_mw", "flac only allows integer format up to 24 bits\n"
"Use wav for 32 bits float"))
        self.format_cmb.setItemText(0, _translate("rename_tool_mw", "same"))
        self.format_cmb.setItemText(1, _translate("rename_tool_mw", "wav"))
        self.format_cmb.setItemText(2, _translate("rename_tool_mw", "flac"))
        self.label.setText(_translate("rename_tool_mw", "Bit Depth"))
        self.bitdepth_cmb.setItemText(0, _translate("rename_tool_mw", "same"))
        self.bitdepth_cmb.setItemText(1, _translate("rename_tool_mw", "16"))
        self.bitdepth_cmb.setItemText(2, _translate("rename_tool_mw", "24"))
        self.bitdepth_cmb.setItemText(3, _translate("rename_tool_mw", "32"))
        self.add_suffix_cb.setText(_translate("rename_tool_mw", "Add suffix"))
        self.add_suffix_le.setToolTip(_translate("rename_tool_mw", "Suffix added to the base name"))
        self.add_suffix_le.setText(_translate("rename_tool_mw", "_tuned"))
        self.no_overwriting_cb.setToolTip(_translate("rename_tool_mw", "Avoid overwriting original files by moving them to a backup directory"))
        self.no_overwriting_cb.setText(_translate("rename_tool_mw", "Avoid Overwriting"))
        self.process_sel_pb.setToolTip(_translate("rename_tool_mw", "Process selected item(s) with current settings"))
        self.process_sel_pb.setText(_translate("rename_tool_mw", "Process Selected"))
        self.process_pb.setToolTip(_translate("rename_tool_mw", "Process all input files with current settings"))
        self.process_pb.setText(_translate("rename_tool_mw", "Batch Process"))
