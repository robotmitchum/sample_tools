# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'upsample_tool.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_upsample_tool_mw(object):
    def setupUi(self, upsample_tool_mw):
        upsample_tool_mw.setObjectName("upsample_tool_mw")
        upsample_tool_mw.resize(640, 768)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        upsample_tool_mw.setFont(font)
        upsample_tool_mw.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.centralwidget = QtWidgets.QWidget(upsample_tool_mw)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.files_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.files_title_l.sizePolicy().hasHeightForWidth())
        self.files_title_l.setSizePolicy(sizePolicy)
        self.files_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.files_title_l.setStyleSheet("background-color: rgb(191, 127, 63);\n"
"color: rgb(255, 255, 255);")
        self.files_title_l.setObjectName("files_title_l")
        self.verticalLayout.addWidget(self.files_title_l)
        self.files_lyt = QtWidgets.QHBoxLayout()
        self.files_lyt.setObjectName("files_lyt")
        self.files_lw = QtWidgets.QListWidget(self.centralwidget)
        self.files_lw.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.files_lw.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.files_lw.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.files_lw.setObjectName("files_lw")
        self.files_lyt.addWidget(self.files_lw)
        self.set_files_tb = QtWidgets.QToolButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.set_files_tb.setFont(font)
        self.set_files_tb.setObjectName("set_files_tb")
        self.files_lyt.addWidget(self.set_files_tb)
        self.verticalLayout.addLayout(self.files_lyt)
        self.options_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.options_title_l.sizePolicy().hasHeightForWidth())
        self.options_title_l.setSizePolicy(sizePolicy)
        self.options_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.options_title_l.setStyleSheet("background-color: rgb(191, 127, 63);\n"
"color: rgb(255, 255, 255);")
        self.options_title_l.setObjectName("options_title_l")
        self.verticalLayout.addWidget(self.options_title_l)
        self.declip_lyt = QtWidgets.QHBoxLayout()
        self.declip_lyt.setObjectName("declip_lyt")
        self.declip_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.declip_cb.setChecked(True)
        self.declip_cb.setObjectName("declip_cb")
        self.declip_lyt.addWidget(self.declip_cb)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.declip_lyt.addItem(spacerItem)
        self.declip_wid = QtWidgets.QWidget(self.centralwidget)
        self.declip_wid.setObjectName("declip_wid")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.declip_wid)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.declip_th_l = QtWidgets.QLabel(self.declip_wid)
        self.declip_th_l.setMinimumSize(QtCore.QSize(48, 0))
        self.declip_th_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.declip_th_l.setObjectName("declip_th_l")
        self.horizontalLayout_2.addWidget(self.declip_th_l)
        self.declip_th_dsb = QtWidgets.QDoubleSpinBox(self.declip_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.declip_th_dsb.sizePolicy().hasHeightForWidth())
        self.declip_th_dsb.setSizePolicy(sizePolicy)
        self.declip_th_dsb.setFrame(False)
        self.declip_th_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.declip_th_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.declip_th_dsb.setMinimum(-12.0)
        self.declip_th_dsb.setMaximum(0.0)
        self.declip_th_dsb.setSingleStep(0.1)
        self.declip_th_dsb.setProperty("value", -0.1)
        self.declip_th_dsb.setObjectName("declip_th_dsb")
        self.horizontalLayout_2.addWidget(self.declip_th_dsb)
        self.declip_mix_l = QtWidgets.QLabel(self.declip_wid)
        self.declip_mix_l.setMinimumSize(QtCore.QSize(48, 0))
        self.declip_mix_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.declip_mix_l.setObjectName("declip_mix_l")
        self.horizontalLayout_2.addWidget(self.declip_mix_l)
        self.declip_mix_dsb = QtWidgets.QDoubleSpinBox(self.declip_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.declip_mix_dsb.sizePolicy().hasHeightForWidth())
        self.declip_mix_dsb.setSizePolicy(sizePolicy)
        self.declip_mix_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.declip_mix_dsb.setFrame(False)
        self.declip_mix_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.declip_mix_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.declip_mix_dsb.setDecimals(3)
        self.declip_mix_dsb.setMaximum(1.0)
        self.declip_mix_dsb.setSingleStep(0.1)
        self.declip_mix_dsb.setProperty("value", 0.25)
        self.declip_mix_dsb.setObjectName("declip_mix_dsb")
        self.horizontalLayout_2.addWidget(self.declip_mix_dsb)
        self.declip_lyt.addWidget(self.declip_wid)
        self.verticalLayout.addLayout(self.declip_lyt)
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout.addWidget(self.line_2)
        self.denoise_lyt = QtWidgets.QHBoxLayout()
        self.denoise_lyt.setObjectName("denoise_lyt")
        self.denoise_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.denoise_cb.setChecked(True)
        self.denoise_cb.setObjectName("denoise_cb")
        self.denoise_lyt.addWidget(self.denoise_cb)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.denoise_lyt.addItem(spacerItem1)
        self.denoise_wid = QtWidgets.QWidget(self.centralwidget)
        self.denoise_wid.setObjectName("denoise_wid")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.denoise_wid)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.denoise_mode_l = QtWidgets.QLabel(self.denoise_wid)
        self.denoise_mode_l.setMinimumSize(QtCore.QSize(48, 0))
        self.denoise_mode_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.denoise_mode_l.setObjectName("denoise_mode_l")
        self.horizontalLayout_3.addWidget(self.denoise_mode_l)
        self.denoise_mode_cmb = QtWidgets.QComboBox(self.denoise_wid)
        self.denoise_mode_cmb.setObjectName("denoise_mode_cmb")
        self.denoise_mode_cmb.addItem("")
        self.denoise_mode_cmb.addItem("")
        self.horizontalLayout_3.addWidget(self.denoise_mode_cmb)
        self.denoise_mix_l = QtWidgets.QLabel(self.denoise_wid)
        self.denoise_mix_l.setMinimumSize(QtCore.QSize(48, 0))
        self.denoise_mix_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.denoise_mix_l.setObjectName("denoise_mix_l")
        self.horizontalLayout_3.addWidget(self.denoise_mix_l)
        self.denoise_mix_dsb = QtWidgets.QDoubleSpinBox(self.denoise_wid)
        self.denoise_mix_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.denoise_mix_dsb.setFrame(False)
        self.denoise_mix_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.denoise_mix_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.denoise_mix_dsb.setDecimals(3)
        self.denoise_mix_dsb.setMaximum(4.0)
        self.denoise_mix_dsb.setSingleStep(0.1)
        self.denoise_mix_dsb.setProperty("value", 0.99)
        self.denoise_mix_dsb.setObjectName("denoise_mix_dsb")
        self.horizontalLayout_3.addWidget(self.denoise_mix_dsb)
        self.denoise_lyt.addWidget(self.denoise_wid)
        self.verticalLayout.addLayout(self.denoise_lyt)
        self.noise_path_lyt = QtWidgets.QHBoxLayout()
        self.noise_path_lyt.setObjectName("noise_path_lyt")
        self.noise_path_wid = QtWidgets.QWidget(self.centralwidget)
        self.noise_path_wid.setEnabled(False)
        self.noise_path_wid.setObjectName("noise_path_wid")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.noise_path_wid)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.noise_path_l = QtWidgets.QLabel(self.noise_path_wid)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.noise_path_l.sizePolicy().hasHeightForWidth())
        self.noise_path_l.setSizePolicy(sizePolicy)
        self.noise_path_l.setText("")
        self.noise_path_l.setObjectName("noise_path_l")
        self.horizontalLayout.addWidget(self.noise_path_l)
        self.set_noise_path_tb = QtWidgets.QToolButton(self.noise_path_wid)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.set_noise_path_tb.setFont(font)
        self.set_noise_path_tb.setObjectName("set_noise_path_tb")
        self.horizontalLayout.addWidget(self.set_noise_path_tb)
        self.noise_path_lyt.addWidget(self.noise_path_wid)
        self.verticalLayout.addLayout(self.noise_path_lyt)
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.verticalLayout.addWidget(self.line_3)
        self.filter_side_lyt = QtWidgets.QHBoxLayout()
        self.filter_side_lyt.setObjectName("filter_side_lyt")
        self.upsample_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.upsample_cb.setChecked(True)
        self.upsample_cb.setObjectName("upsample_cb")
        self.filter_side_lyt.addWidget(self.upsample_cb)
        self.upsample_wid = QtWidgets.QWidget(self.centralwidget)
        self.upsample_wid.setObjectName("upsample_wid")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.upsample_wid)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.f_max_l = QtWidgets.QLabel(self.upsample_wid)
        self.f_max_l.setMinimumSize(QtCore.QSize(48, 0))
        self.f_max_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.f_max_l.setObjectName("f_max_l")
        self.horizontalLayout_4.addWidget(self.f_max_l)
        self.f_max_mode_cmb = QtWidgets.QComboBox(self.upsample_wid)
        self.f_max_mode_cmb.setObjectName("f_max_mode_cmb")
        self.f_max_mode_cmb.addItem("")
        self.f_max_mode_cmb.addItem("")
        self.horizontalLayout_4.addWidget(self.f_max_mode_cmb)
        self.f_max_sb = QtWidgets.QSpinBox(self.upsample_wid)
        self.f_max_sb.setEnabled(False)
        self.f_max_sb.setMinimumSize(QtCore.QSize(48, 0))
        self.f_max_sb.setFrame(False)
        self.f_max_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.f_max_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.f_max_sb.setMinimum(0)
        self.f_max_sb.setMaximum(24000)
        self.f_max_sb.setProperty("value", 5512)
        self.f_max_sb.setObjectName("f_max_sb")
        self.horizontalLayout_4.addWidget(self.f_max_sb)
        self.target_sr_l = QtWidgets.QLabel(self.upsample_wid)
        self.target_sr_l.setMinimumSize(QtCore.QSize(48, 0))
        self.target_sr_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.target_sr_l.setObjectName("target_sr_l")
        self.horizontalLayout_4.addWidget(self.target_sr_l)
        self.target_sr_sb = QtWidgets.QSpinBox(self.upsample_wid)
        self.target_sr_sb.setMinimumSize(QtCore.QSize(48, 0))
        self.target_sr_sb.setFrame(False)
        self.target_sr_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.target_sr_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.target_sr_sb.setMinimum(32000)
        self.target_sr_sb.setMaximum(96000)
        self.target_sr_sb.setProperty("value", 48000)
        self.target_sr_sb.setObjectName("target_sr_sb")
        self.horizontalLayout_4.addWidget(self.target_sr_sb)
        self.upsample_mix_l = QtWidgets.QLabel(self.upsample_wid)
        self.upsample_mix_l.setMinimumSize(QtCore.QSize(48, 0))
        self.upsample_mix_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.upsample_mix_l.setObjectName("upsample_mix_l")
        self.horizontalLayout_4.addWidget(self.upsample_mix_l)
        self.upsample_mix_dsb = QtWidgets.QDoubleSpinBox(self.upsample_wid)
        self.upsample_mix_dsb.setMinimumSize(QtCore.QSize(48, 0))
        self.upsample_mix_dsb.setFrame(False)
        self.upsample_mix_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.upsample_mix_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.upsample_mix_dsb.setDecimals(3)
        self.upsample_mix_dsb.setMaximum(2.0)
        self.upsample_mix_dsb.setSingleStep(0.1)
        self.upsample_mix_dsb.setProperty("value", 1.0)
        self.upsample_mix_dsb.setObjectName("upsample_mix_dsb")
        self.horizontalLayout_4.addWidget(self.upsample_mix_dsb)
        self.filter_side_lyt.addWidget(self.upsample_wid)
        self.verticalLayout.addLayout(self.filter_side_lyt)
        self.output_path_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_path_title_l.sizePolicy().hasHeightForWidth())
        self.output_path_title_l.setSizePolicy(sizePolicy)
        self.output_path_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.output_path_title_l.setStyleSheet("background-color: rgb(191, 127, 63);\n"
"color: rgb(255, 255, 255);")
        self.output_path_title_l.setObjectName("output_path_title_l")
        self.verticalLayout.addWidget(self.output_path_title_l)
        self.output_path_lyt = QtWidgets.QHBoxLayout()
        self.output_path_lyt.setObjectName("output_path_lyt")
        self.output_path_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_path_l.sizePolicy().hasHeightForWidth())
        self.output_path_l.setSizePolicy(sizePolicy)
        self.output_path_l.setObjectName("output_path_l")
        self.output_path_lyt.addWidget(self.output_path_l)
        self.set_output_path_tb = QtWidgets.QToolButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.set_output_path_tb.setFont(font)
        self.set_output_path_tb.setObjectName("set_output_path_tb")
        self.output_path_lyt.addWidget(self.set_output_path_tb)
        self.verticalLayout.addLayout(self.output_path_lyt)
        self.settings_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.settings_title_l.sizePolicy().hasHeightForWidth())
        self.settings_title_l.setSizePolicy(sizePolicy)
        self.settings_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.settings_title_l.setStyleSheet("background-color: rgb(191, 127, 63);\n"
"color: rgb(255, 255, 255);")
        self.settings_title_l.setObjectName("settings_title_l")
        self.verticalLayout.addWidget(self.settings_title_l)
        self.file_settings_lyt = QtWidgets.QHBoxLayout()
        self.file_settings_lyt.setObjectName("file_settings_lyt")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setObjectName("label_2")
        self.file_settings_lyt.addWidget(self.label_2)
        self.format_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.format_cmb.sizePolicy().hasHeightForWidth())
        self.format_cmb.setSizePolicy(sizePolicy)
        self.format_cmb.setFrame(False)
        self.format_cmb.setObjectName("format_cmb")
        self.format_cmb.addItem("")
        self.format_cmb.addItem("")
        self.format_cmb.addItem("")
        self.file_settings_lyt.addWidget(self.format_cmb)
        self.bd_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bd_l.sizePolicy().hasHeightForWidth())
        self.bd_l.setSizePolicy(sizePolicy)
        self.bd_l.setObjectName("bd_l")
        self.file_settings_lyt.addWidget(self.bd_l)
        self.bitdepth_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bitdepth_cmb.sizePolicy().hasHeightForWidth())
        self.bitdepth_cmb.setSizePolicy(sizePolicy)
        self.bitdepth_cmb.setFrame(False)
        self.bitdepth_cmb.setObjectName("bitdepth_cmb")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.file_settings_lyt.addWidget(self.bitdepth_cmb)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.file_settings_lyt.addItem(spacerItem2)
        self.add_suffix_cb = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add_suffix_cb.sizePolicy().hasHeightForWidth())
        self.add_suffix_cb.setSizePolicy(sizePolicy)
        self.add_suffix_cb.setChecked(True)
        self.add_suffix_cb.setObjectName("add_suffix_cb")
        self.file_settings_lyt.addWidget(self.add_suffix_cb)
        self.suffix_le = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suffix_le.sizePolicy().hasHeightForWidth())
        self.suffix_le.setSizePolicy(sizePolicy)
        self.suffix_le.setMaxLength(16)
        self.suffix_le.setFrame(False)
        self.suffix_le.setObjectName("suffix_le")
        self.file_settings_lyt.addWidget(self.suffix_le)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.file_settings_lyt.addItem(spacerItem3)
        self.no_overwriting_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.no_overwriting_cb.setChecked(True)
        self.no_overwriting_cb.setObjectName("no_overwriting_cb")
        self.file_settings_lyt.addWidget(self.no_overwriting_cb)
        self.verticalLayout.addLayout(self.file_settings_lyt)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.buttons_lyt = QtWidgets.QGridLayout()
        self.buttons_lyt.setObjectName("buttons_lyt")
        self.process_sel_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_sel_pb.sizePolicy().hasHeightForWidth())
        self.process_sel_pb.setSizePolicy(sizePolicy)
        self.process_sel_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.process_sel_pb.setFont(font)
        self.process_sel_pb.setObjectName("process_sel_pb")
        self.buttons_lyt.addWidget(self.process_sel_pb, 0, 1, 1, 1)
        self.preview_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.preview_pb.sizePolicy().hasHeightForWidth())
        self.preview_pb.setSizePolicy(sizePolicy)
        self.preview_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.preview_pb.setFont(font)
        self.preview_pb.setObjectName("preview_pb")
        self.buttons_lyt.addWidget(self.preview_pb, 0, 0, 1, 1)
        self.process_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_pb.sizePolicy().hasHeightForWidth())
        self.process_pb.setSizePolicy(sizePolicy)
        self.process_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.process_pb.setFont(font)
        self.process_pb.setStyleSheet("QPushButton{background-color: rgb(191, 127, 63);color: rgb(255, 255, 255);}")
        self.process_pb.setDefault(False)
        self.process_pb.setObjectName("process_pb")
        self.buttons_lyt.addWidget(self.process_pb, 1, 1, 1, 1)
        self.verticalLayout.addLayout(self.buttons_lyt)
        self.progress_pb = QtWidgets.QProgressBar(self.centralwidget)
        self.progress_pb.setStyleSheet("QProgressBar{border: none;}")
        self.progress_pb.setProperty("value", 0)
        self.progress_pb.setAlignment(QtCore.Qt.AlignCenter)
        self.progress_pb.setTextVisible(False)
        self.progress_pb.setFormat("")
        self.progress_pb.setObjectName("progress_pb")
        self.verticalLayout.addWidget(self.progress_pb)
        upsample_tool_mw.setCentralWidget(self.centralwidget)

        self.retranslateUi(upsample_tool_mw)
        self.format_cmb.setCurrentIndex(0)
        self.bitdepth_cmb.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(upsample_tool_mw)

    def retranslateUi(self, upsample_tool_mw):
        _translate = QtCore.QCoreApplication.translate
        upsample_tool_mw.setWindowTitle(_translate("upsample_tool_mw", "Upsample Tool"))
        self.files_title_l.setText(_translate("upsample_tool_mw", "Input Files"))
        self.files_lw.setToolTip(_translate("upsample_tool_mw", "Drag and drop files or directories\n"
"Right click for context actions\n"
"Double-click to play"))
        self.set_files_tb.setToolTip(_translate("upsample_tool_mw", "Set files to process"))
        self.set_files_tb.setText(_translate("upsample_tool_mw", "..."))
        self.options_title_l.setText(_translate("upsample_tool_mw", "Options"))
        self.declip_cb.setToolTip(_translate("upsample_tool_mw", "Simplistic declip to help denoise and upsampling"))
        self.declip_cb.setText(_translate("upsample_tool_mw", "Declip"))
        self.declip_th_l.setText(_translate("upsample_tool_mw", "Threshold"))
        self.declip_th_dsb.setToolTip(_translate("upsample_tool_mw", "Declip threshold in dB"))
        self.declip_mix_l.setText(_translate("upsample_tool_mw", "Mix"))
        self.declip_mix_dsb.setToolTip(_translate("upsample_tool_mw", "Blend with original audio"))
        self.denoise_cb.setToolTip(_translate("upsample_tool_mw", "Denoise audio using spectral gating"))
        self.denoise_cb.setText(_translate("upsample_tool_mw", "Denoise"))
        self.denoise_mode_l.setText(_translate("upsample_tool_mw", "Mode"))
        self.denoise_mode_cmb.setToolTip(_translate("upsample_tool_mw", "Noise type\n"
"\n"
"8bits: Reduce 8 bits quantization noise\n"
"Custom: Use custom noise profile"))
        self.denoise_mode_cmb.setItemText(0, _translate("upsample_tool_mw", "8bits"))
        self.denoise_mode_cmb.setItemText(1, _translate("upsample_tool_mw", "custom"))
        self.denoise_mix_l.setText(_translate("upsample_tool_mw", "Mix"))
        self.denoise_mix_dsb.setToolTip(_translate("upsample_tool_mw", "Noise reduction factor"))
        self.noise_path_l.setToolTip(_translate("upsample_tool_mw", "Path to custom noise profile"))
        self.set_noise_path_tb.setToolTip(_translate("upsample_tool_mw", "Set noise profile to use for denoise"))
        self.set_noise_path_tb.setText(_translate("upsample_tool_mw", "..."))
        self.upsample_cb.setToolTip(_translate("upsample_tool_mw", "Audio up-resolution by replicating upper frequency band"))
        self.upsample_cb.setText(_translate("upsample_tool_mw", "Upsample"))
        self.f_max_l.setText(_translate("upsample_tool_mw", "Max Freq"))
        self.f_max_mode_cmb.setToolTip(_translate("upsample_tool_mw", "Upper frequency threshold before up-sampling\n"
"\n"
"max: Nyquist, Input sampling rate / 2 (default)\n"
"custom: When input audio features a cutoff lower than Nyquist"))
        self.f_max_mode_cmb.setItemText(0, _translate("upsample_tool_mw", "max"))
        self.f_max_mode_cmb.setItemText(1, _translate("upsample_tool_mw", "custom"))
        self.target_sr_l.setText(_translate("upsample_tool_mw", "Target Sample Rate"))
        self.upsample_mix_l.setText(_translate("upsample_tool_mw", "Mix"))
        self.upsample_mix_dsb.setToolTip(_translate("upsample_tool_mw", "Replicated bands multiplying factor"))
        self.output_path_title_l.setText(_translate("upsample_tool_mw", "Output Path"))
        self.output_path_l.setToolTip(_translate("upsample_tool_mw", "Output path"))
        self.set_output_path_tb.setToolTip(_translate("upsample_tool_mw", "Set output path\n"
"Process files in their respective directory if empty"))
        self.set_output_path_tb.setText(_translate("upsample_tool_mw", "..."))
        self.settings_title_l.setText(_translate("upsample_tool_mw", "File Settings"))
        self.label_2.setText(_translate("upsample_tool_mw", "Format"))
        self.format_cmb.setToolTip(_translate("upsample_tool_mw", "flac only allows integer format up to 24 bits\n"
"Use wav for 32 bits float"))
        self.format_cmb.setItemText(0, _translate("upsample_tool_mw", "same"))
        self.format_cmb.setItemText(1, _translate("upsample_tool_mw", "wav"))
        self.format_cmb.setItemText(2, _translate("upsample_tool_mw", "flac"))
        self.bd_l.setText(_translate("upsample_tool_mw", "Bit Depth"))
        self.bitdepth_cmb.setItemText(0, _translate("upsample_tool_mw", "same"))
        self.bitdepth_cmb.setItemText(1, _translate("upsample_tool_mw", "16"))
        self.bitdepth_cmb.setItemText(2, _translate("upsample_tool_mw", "24"))
        self.bitdepth_cmb.setItemText(3, _translate("upsample_tool_mw", "32"))
        self.add_suffix_cb.setText(_translate("upsample_tool_mw", "Add suffix"))
        self.suffix_le.setToolTip(_translate("upsample_tool_mw", "Suffix added to the base name"))
        self.suffix_le.setText(_translate("upsample_tool_mw", "_up"))
        self.no_overwriting_cb.setToolTip(_translate("upsample_tool_mw", "Avoid overwriting original files by moving them to a backup directory"))
        self.no_overwriting_cb.setText(_translate("upsample_tool_mw", "Avoid Overwriting"))
        self.process_sel_pb.setToolTip(_translate("upsample_tool_mw", "Process selected item(s) with current settings"))
        self.process_sel_pb.setText(_translate("upsample_tool_mw", "Process Selected"))
        self.preview_pb.setToolTip(_translate("upsample_tool_mw", "Apply current settings to selected item\n"
"and play the result without writing anything"))
        self.preview_pb.setText(_translate("upsample_tool_mw", "Preview Selected"))
        self.process_pb.setToolTip(_translate("upsample_tool_mw", "Process all input files with current settings"))
        self.process_pb.setText(_translate("upsample_tool_mw", "Batch Process"))
