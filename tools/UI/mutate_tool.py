# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\mitch\Documents\PycharmProjects\github\sample_tools\tools\UI\mutate_tool.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_mutate_tool_mw(object):
    def setupUi(self, mutate_tool_mw):
        mutate_tool_mw.setObjectName("mutate_tool_mw")
        mutate_tool_mw.resize(640, 768)
        mutate_tool_mw.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.centralwidget = QtWidgets.QWidget(mutate_tool_mw)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.files_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.files_title_l.sizePolicy().hasHeightForWidth())
        self.files_title_l.setSizePolicy(sizePolicy)
        self.files_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.files_title_l.setStyleSheet("background-color: rgb(95, 144, 47);\n"
"color: rgb(255, 255, 255);")
        self.files_title_l.setObjectName("files_title_l")
        self.verticalLayout.addWidget(self.files_title_l)
        self.files_lyt = QtWidgets.QHBoxLayout()
        self.files_lyt.setObjectName("files_lyt")
        self.files_lw = QtWidgets.QListWidget(self.centralwidget)
        self.files_lw.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.files_lw.setDragDropMode(QtWidgets.QAbstractItemView.DropOnly)
        self.files_lw.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.files_lw.setObjectName("files_lw")
        self.files_lyt.addWidget(self.files_lw)
        self.set_files_tb = QtWidgets.QToolButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.set_files_tb.setFont(font)
        self.set_files_tb.setObjectName("set_files_tb")
        self.files_lyt.addWidget(self.set_files_tb)
        self.verticalLayout.addLayout(self.files_lyt)
        self.options_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.options_title_l.sizePolicy().hasHeightForWidth())
        self.options_title_l.setSizePolicy(sizePolicy)
        self.options_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.options_title_l.setStyleSheet("background-color: rgb(95, 144, 47);\n"
"color: rgb(255, 255, 255);")
        self.options_title_l.setObjectName("options_title_l")
        self.verticalLayout.addWidget(self.options_title_l)
        self.variants_lyt = QtWidgets.QHBoxLayout()
        self.variants_lyt.setObjectName("variants_lyt")
        self.variants_l = QtWidgets.QLabel(self.centralwidget)
        self.variants_l.setObjectName("variants_l")
        self.variants_lyt.addWidget(self.variants_l)
        self.count_l = QtWidgets.QLabel(self.centralwidget)
        self.count_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.count_l.setObjectName("count_l")
        self.variants_lyt.addWidget(self.count_l)
        self.count_sb = QtWidgets.QSpinBox(self.centralwidget)
        self.count_sb.setFrame(False)
        self.count_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.count_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.count_sb.setMinimum(1)
        self.count_sb.setMaximum(16)
        self.count_sb.setProperty("value", 5)
        self.count_sb.setObjectName("count_sb")
        self.variants_lyt.addWidget(self.count_sb)
        self.seed_l = QtWidgets.QLabel(self.centralwidget)
        self.seed_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.seed_l.setObjectName("seed_l")
        self.variants_lyt.addWidget(self.seed_l)
        self.seed_mode_cmb = QtWidgets.QComboBox(self.centralwidget)
        self.seed_mode_cmb.setObjectName("seed_mode_cmb")
        self.seed_mode_cmb.addItem("")
        self.seed_mode_cmb.addItem("")
        self.variants_lyt.addWidget(self.seed_mode_cmb)
        self.seed_sb = QtWidgets.QSpinBox(self.centralwidget)
        self.seed_sb.setEnabled(False)
        self.seed_sb.setFrame(False)
        self.seed_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.seed_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.seed_sb.setMinimum(1)
        self.seed_sb.setMaximum(99999)
        self.seed_sb.setProperty("value", 1)
        self.seed_sb.setObjectName("seed_sb")
        self.variants_lyt.addWidget(self.seed_sb)
        self.spc_wid_3 = QtWidgets.QWidget(self.centralwidget)
        self.spc_wid_3.setObjectName("spc_wid_3")
        self.variants_lyt.addWidget(self.spc_wid_3)
        self.verticalLayout.addLayout(self.variants_lyt)
        self.line_5 = QtWidgets.QFrame(self.centralwidget)
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.verticalLayout.addWidget(self.line_5)
        self.input_lyt = QtWidgets.QHBoxLayout()
        self.input_lyt.setObjectName("input_lyt")
        self.input_l = QtWidgets.QLabel(self.centralwidget)
        self.input_l.setObjectName("input_l")
        self.input_lyt.addWidget(self.input_l)
        self.multi_chn_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.multi_chn_cb.setChecked(True)
        self.multi_chn_cb.setObjectName("multi_chn_cb")
        self.input_lyt.addWidget(self.multi_chn_cb)
        self.trim_db_l = QtWidgets.QLabel(self.centralwidget)
        self.trim_db_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.trim_db_l.setObjectName("trim_db_l")
        self.input_lyt.addWidget(self.trim_db_l)
        self.input_wid = QtWidgets.QWidget(self.centralwidget)
        self.input_wid.setObjectName("input_wid")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.input_wid)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.trim_db_dsb = QtWidgets.QDoubleSpinBox(self.input_wid)
        self.trim_db_dsb.setFrame(False)
        self.trim_db_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.trim_db_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.trim_db_dsb.setMinimum(-120.0)
        self.trim_db_dsb.setMaximum(0.0)
        self.trim_db_dsb.setSingleStep(0.1)
        self.trim_db_dsb.setProperty("value", -60.0)
        self.trim_db_dsb.setObjectName("trim_db_dsb")
        self.horizontalLayout_2.addWidget(self.trim_db_dsb)
        self.input_lyt.addWidget(self.input_wid)
        self.verticalLayout.addLayout(self.input_lyt)
        self.transient_cues_lyt = QtWidgets.QHBoxLayout()
        self.transient_cues_lyt.setObjectName("transient_cues_lyt")
        self.transient_cues_l = QtWidgets.QLabel(self.centralwidget)
        self.transient_cues_l.setObjectName("transient_cues_l")
        self.transient_cues_lyt.addWidget(self.transient_cues_l)
        self.spc_wid = QtWidgets.QWidget(self.centralwidget)
        self.spc_wid.setObjectName("spc_wid")
        self.transient_cues_lyt.addWidget(self.spc_wid)
        self.min_dur_l = QtWidgets.QLabel(self.centralwidget)
        self.min_dur_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.min_dur_l.setObjectName("min_dur_l")
        self.transient_cues_lyt.addWidget(self.min_dur_l)
        self.min_dur_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.min_dur_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.min_dur_dsb.setFrame(False)
        self.min_dur_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.min_dur_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.min_dur_dsb.setDecimals(3)
        self.min_dur_dsb.setMinimum(0.0)
        self.min_dur_dsb.setMaximum(4.0)
        self.min_dur_dsb.setSingleStep(0.1)
        self.min_dur_dsb.setProperty("value", 0.1)
        self.min_dur_dsb.setObjectName("min_dur_dsb")
        self.transient_cues_lyt.addWidget(self.min_dur_dsb)
        self.verticalLayout.addLayout(self.transient_cues_lyt)
        self.noise_tonal_split_lyt = QtWidgets.QHBoxLayout()
        self.noise_tonal_split_lyt.setObjectName("noise_tonal_split_lyt")
        self.noise_tonal_l = QtWidgets.QLabel(self.centralwidget)
        self.noise_tonal_l.setObjectName("noise_tonal_l")
        self.noise_tonal_split_lyt.addWidget(self.noise_tonal_l)
        self.stft_size_l = QtWidgets.QLabel(self.centralwidget)
        self.stft_size_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.stft_size_l.setObjectName("stft_size_l")
        self.noise_tonal_split_lyt.addWidget(self.stft_size_l)
        self.split_stft_sb = QtWidgets.QSpinBox(self.centralwidget)
        self.split_stft_sb.setFrame(False)
        self.split_stft_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.split_stft_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.split_stft_sb.setMinimum(512)
        self.split_stft_sb.setMaximum(16384)
        self.split_stft_sb.setProperty("value", 8192)
        self.split_stft_sb.setObjectName("split_stft_sb")
        self.noise_tonal_split_lyt.addWidget(self.split_stft_sb)
        self.iterations_l = QtWidgets.QLabel(self.centralwidget)
        self.iterations_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.iterations_l.setObjectName("iterations_l")
        self.noise_tonal_split_lyt.addWidget(self.iterations_l)
        self.iterations_sb = QtWidgets.QSpinBox(self.centralwidget)
        self.iterations_sb.setFrame(False)
        self.iterations_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.iterations_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.iterations_sb.setMinimum(1)
        self.iterations_sb.setMaximum(16)
        self.iterations_sb.setProperty("value", 1)
        self.iterations_sb.setObjectName("iterations_sb")
        self.noise_tonal_split_lyt.addWidget(self.iterations_sb)
        self.end_mode_l = QtWidgets.QLabel(self.centralwidget)
        self.end_mode_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.end_mode_l.setObjectName("end_mode_l")
        self.noise_tonal_split_lyt.addWidget(self.end_mode_l)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.noise_tonal_split_lyt.addWidget(self.comboBox)
        self.verticalLayout.addLayout(self.noise_tonal_split_lyt)
        self.line_4 = QtWidgets.QFrame(self.centralwidget)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.verticalLayout.addWidget(self.line_4)
        self.params_grid_lyt = QtWidgets.QGridLayout()
        self.params_grid_lyt.setHorizontalSpacing(16)
        self.params_grid_lyt.setVerticalSpacing(4)
        self.params_grid_lyt.setObjectName("params_grid_lyt")
        self.noise_lyt = QtWidgets.QHBoxLayout()
        self.noise_lyt.setSpacing(0)
        self.noise_lyt.setObjectName("noise_lyt")
        self.noise_amp_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.noise_amp_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.noise_amp_dsb.setFrame(False)
        self.noise_amp_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.noise_amp_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.noise_amp_dsb.setDecimals(3)
        self.noise_amp_dsb.setMinimum(0.0)
        self.noise_amp_dsb.setMaximum(4.0)
        self.noise_amp_dsb.setSingleStep(0.1)
        self.noise_amp_dsb.setProperty("value", 1.0)
        self.noise_amp_dsb.setObjectName("noise_amp_dsb")
        self.noise_lyt.addWidget(self.noise_amp_dsb)
        self.noise_rate_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.noise_rate_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.noise_rate_dsb.setFrame(False)
        self.noise_rate_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.noise_rate_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.noise_rate_dsb.setDecimals(3)
        self.noise_rate_dsb.setMinimum(0.0)
        self.noise_rate_dsb.setMaximum(8.0)
        self.noise_rate_dsb.setSingleStep(0.1)
        self.noise_rate_dsb.setProperty("value", 1.0)
        self.noise_rate_dsb.setObjectName("noise_rate_dsb")
        self.noise_lyt.addWidget(self.noise_rate_dsb)
        self.noise_pitch_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.noise_pitch_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.noise_pitch_dsb.setFrame(False)
        self.noise_pitch_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.noise_pitch_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.noise_pitch_dsb.setDecimals(3)
        self.noise_pitch_dsb.setMinimum(-36.0)
        self.noise_pitch_dsb.setMaximum(36.0)
        self.noise_pitch_dsb.setSingleStep(0.1)
        self.noise_pitch_dsb.setProperty("value", 0.0)
        self.noise_pitch_dsb.setObjectName("noise_pitch_dsb")
        self.noise_lyt.addWidget(self.noise_pitch_dsb)
        self.params_grid_lyt.addLayout(self.noise_lyt, 2, 2, 1, 1)
        self.noise_l = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.noise_l.setFont(font)
        self.noise_l.setAlignment(QtCore.Qt.AlignCenter)
        self.noise_l.setObjectName("noise_l")
        self.params_grid_lyt.addWidget(self.noise_l, 0, 2, 1, 1)
        self.tonal_lyt = QtWidgets.QHBoxLayout()
        self.tonal_lyt.setSpacing(0)
        self.tonal_lyt.setObjectName("tonal_lyt")
        self.tonal_amp_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.tonal_amp_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.tonal_amp_dsb.setFrame(False)
        self.tonal_amp_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.tonal_amp_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.tonal_amp_dsb.setDecimals(3)
        self.tonal_amp_dsb.setMinimum(0.0)
        self.tonal_amp_dsb.setMaximum(4.0)
        self.tonal_amp_dsb.setSingleStep(0.1)
        self.tonal_amp_dsb.setProperty("value", 1.0)
        self.tonal_amp_dsb.setObjectName("tonal_amp_dsb")
        self.tonal_lyt.addWidget(self.tonal_amp_dsb)
        self.tonal_rate_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.tonal_rate_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.tonal_rate_dsb.setFrame(False)
        self.tonal_rate_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.tonal_rate_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.tonal_rate_dsb.setDecimals(3)
        self.tonal_rate_dsb.setMinimum(0.0)
        self.tonal_rate_dsb.setMaximum(8.0)
        self.tonal_rate_dsb.setSingleStep(0.1)
        self.tonal_rate_dsb.setProperty("value", 1.0)
        self.tonal_rate_dsb.setObjectName("tonal_rate_dsb")
        self.tonal_lyt.addWidget(self.tonal_rate_dsb)
        self.tonal_pitch_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.tonal_pitch_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.tonal_pitch_dsb.setFrame(False)
        self.tonal_pitch_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.tonal_pitch_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.tonal_pitch_dsb.setDecimals(3)
        self.tonal_pitch_dsb.setMinimum(-36.0)
        self.tonal_pitch_dsb.setMaximum(36.0)
        self.tonal_pitch_dsb.setSingleStep(0.1)
        self.tonal_pitch_dsb.setProperty("value", 0.0)
        self.tonal_pitch_dsb.setObjectName("tonal_pitch_dsb")
        self.tonal_lyt.addWidget(self.tonal_pitch_dsb)
        self.params_grid_lyt.addLayout(self.tonal_lyt, 2, 3, 1, 1)
        self.noise_lbl_lyt = QtWidgets.QHBoxLayout()
        self.noise_lbl_lyt.setSpacing(0)
        self.noise_lbl_lyt.setObjectName("noise_lbl_lyt")
        self.noise_amp_l = QtWidgets.QLabel(self.centralwidget)
        self.noise_amp_l.setAlignment(QtCore.Qt.AlignCenter)
        self.noise_amp_l.setObjectName("noise_amp_l")
        self.noise_lbl_lyt.addWidget(self.noise_amp_l)
        self.noise_rate_l = QtWidgets.QLabel(self.centralwidget)
        self.noise_rate_l.setAlignment(QtCore.Qt.AlignCenter)
        self.noise_rate_l.setObjectName("noise_rate_l")
        self.noise_lbl_lyt.addWidget(self.noise_rate_l)
        self.noise_pitch_l = QtWidgets.QLabel(self.centralwidget)
        self.noise_pitch_l.setAlignment(QtCore.Qt.AlignCenter)
        self.noise_pitch_l.setObjectName("noise_pitch_l")
        self.noise_lbl_lyt.addWidget(self.noise_pitch_l)
        self.params_grid_lyt.addLayout(self.noise_lbl_lyt, 1, 2, 1, 1)
        self.params_pb = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.params_pb.setFont(font)
        self.params_pb.setObjectName("params_pb")
        self.params_grid_lyt.addWidget(self.params_pb, 2, 1, 1, 1)
        self.random_pb = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.random_pb.setFont(font)
        self.random_pb.setObjectName("random_pb")
        self.params_grid_lyt.addWidget(self.random_pb, 3, 1, 1, 1)
        self.tonal_l = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.tonal_l.setFont(font)
        self.tonal_l.setAlignment(QtCore.Qt.AlignCenter)
        self.tonal_l.setObjectName("tonal_l")
        self.params_grid_lyt.addWidget(self.tonal_l, 0, 3, 1, 1)
        self.tonal_lbl_lyt = QtWidgets.QHBoxLayout()
        self.tonal_lbl_lyt.setSpacing(0)
        self.tonal_lbl_lyt.setObjectName("tonal_lbl_lyt")
        self.tonal_amp_l = QtWidgets.QLabel(self.centralwidget)
        self.tonal_amp_l.setAlignment(QtCore.Qt.AlignCenter)
        self.tonal_amp_l.setObjectName("tonal_amp_l")
        self.tonal_lbl_lyt.addWidget(self.tonal_amp_l)
        self.tonal_rate_l = QtWidgets.QLabel(self.centralwidget)
        self.tonal_rate_l.setAlignment(QtCore.Qt.AlignCenter)
        self.tonal_rate_l.setObjectName("tonal_rate_l")
        self.tonal_lbl_lyt.addWidget(self.tonal_rate_l)
        self.tonal_pitch_l = QtWidgets.QLabel(self.centralwidget)
        self.tonal_pitch_l.setAlignment(QtCore.Qt.AlignCenter)
        self.tonal_pitch_l.setObjectName("tonal_pitch_l")
        self.tonal_lbl_lyt.addWidget(self.tonal_pitch_l)
        self.params_grid_lyt.addLayout(self.tonal_lbl_lyt, 1, 3, 1, 1)
        self.noise_rand_lyt = QtWidgets.QHBoxLayout()
        self.noise_rand_lyt.setSpacing(0)
        self.noise_rand_lyt.setObjectName("noise_rand_lyt")
        self.noise_rand_amp_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.noise_rand_amp_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.noise_rand_amp_dsb.setFrame(False)
        self.noise_rand_amp_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.noise_rand_amp_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.noise_rand_amp_dsb.setDecimals(3)
        self.noise_rand_amp_dsb.setMinimum(0.0)
        self.noise_rand_amp_dsb.setMaximum(4.0)
        self.noise_rand_amp_dsb.setSingleStep(0.1)
        self.noise_rand_amp_dsb.setProperty("value", 0.5)
        self.noise_rand_amp_dsb.setObjectName("noise_rand_amp_dsb")
        self.noise_rand_lyt.addWidget(self.noise_rand_amp_dsb)
        self.noise_rand_rate_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.noise_rand_rate_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.noise_rand_rate_dsb.setFrame(False)
        self.noise_rand_rate_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.noise_rand_rate_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.noise_rand_rate_dsb.setDecimals(3)
        self.noise_rand_rate_dsb.setMinimum(0.0)
        self.noise_rand_rate_dsb.setMaximum(8.0)
        self.noise_rand_rate_dsb.setSingleStep(0.1)
        self.noise_rand_rate_dsb.setProperty("value", 0.5)
        self.noise_rand_rate_dsb.setObjectName("noise_rand_rate_dsb")
        self.noise_rand_lyt.addWidget(self.noise_rand_rate_dsb)
        self.noise_rand_pitch_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.noise_rand_pitch_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.noise_rand_pitch_dsb.setFrame(False)
        self.noise_rand_pitch_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.noise_rand_pitch_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.noise_rand_pitch_dsb.setDecimals(3)
        self.noise_rand_pitch_dsb.setMinimum(0.0)
        self.noise_rand_pitch_dsb.setMaximum(36.0)
        self.noise_rand_pitch_dsb.setSingleStep(0.1)
        self.noise_rand_pitch_dsb.setProperty("value", 2.0)
        self.noise_rand_pitch_dsb.setObjectName("noise_rand_pitch_dsb")
        self.noise_rand_lyt.addWidget(self.noise_rand_pitch_dsb)
        self.params_grid_lyt.addLayout(self.noise_rand_lyt, 3, 2, 1, 1)
        self.tonal_rand_lyt = QtWidgets.QHBoxLayout()
        self.tonal_rand_lyt.setSpacing(0)
        self.tonal_rand_lyt.setObjectName("tonal_rand_lyt")
        self.tonal_rand_amp_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.tonal_rand_amp_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.tonal_rand_amp_dsb.setFrame(False)
        self.tonal_rand_amp_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.tonal_rand_amp_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.tonal_rand_amp_dsb.setDecimals(3)
        self.tonal_rand_amp_dsb.setMinimum(0.0)
        self.tonal_rand_amp_dsb.setMaximum(4.0)
        self.tonal_rand_amp_dsb.setSingleStep(0.1)
        self.tonal_rand_amp_dsb.setProperty("value", 0.25)
        self.tonal_rand_amp_dsb.setObjectName("tonal_rand_amp_dsb")
        self.tonal_rand_lyt.addWidget(self.tonal_rand_amp_dsb)
        self.tonal_rand_rate_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.tonal_rand_rate_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.tonal_rand_rate_dsb.setFrame(False)
        self.tonal_rand_rate_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.tonal_rand_rate_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.tonal_rand_rate_dsb.setDecimals(3)
        self.tonal_rand_rate_dsb.setMinimum(0.0)
        self.tonal_rand_rate_dsb.setMaximum(8.0)
        self.tonal_rand_rate_dsb.setSingleStep(0.1)
        self.tonal_rand_rate_dsb.setProperty("value", 0.5)
        self.tonal_rand_rate_dsb.setObjectName("tonal_rand_rate_dsb")
        self.tonal_rand_lyt.addWidget(self.tonal_rand_rate_dsb)
        self.tonal_rand_pitch_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.tonal_rand_pitch_dsb.setMinimumSize(QtCore.QSize(64, 0))
        self.tonal_rand_pitch_dsb.setFrame(False)
        self.tonal_rand_pitch_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.tonal_rand_pitch_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.tonal_rand_pitch_dsb.setDecimals(3)
        self.tonal_rand_pitch_dsb.setMinimum(0.0)
        self.tonal_rand_pitch_dsb.setMaximum(36.0)
        self.tonal_rand_pitch_dsb.setSingleStep(0.1)
        self.tonal_rand_pitch_dsb.setProperty("value", 0.05)
        self.tonal_rand_pitch_dsb.setObjectName("tonal_rand_pitch_dsb")
        self.tonal_rand_lyt.addWidget(self.tonal_rand_pitch_dsb)
        self.params_grid_lyt.addLayout(self.tonal_rand_lyt, 3, 3, 1, 1)
        self.match_cues_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.match_cues_cb.setObjectName("match_cues_cb")
        self.params_grid_lyt.addWidget(self.match_cues_cb, 3, 4, 1, 1)
        self.spc_wid_2 = QtWidgets.QWidget(self.centralwidget)
        self.spc_wid_2.setObjectName("spc_wid_2")
        self.params_grid_lyt.addWidget(self.spc_wid_2, 0, 4, 1, 1)
        self.verticalLayout.addLayout(self.params_grid_lyt)
        self.amp_interp_lyt = QtWidgets.QHBoxLayout()
        self.amp_interp_lyt.setSpacing(8)
        self.amp_interp_lyt.setObjectName("amp_interp_lyt")
        self.spc_wid_6 = QtWidgets.QWidget(self.centralwidget)
        self.spc_wid_6.setObjectName("spc_wid_6")
        self.spc_wid_5 = QtWidgets.QWidget(self.spc_wid_6)
        self.spc_wid_5.setGeometry(QtCore.QRect(140, 0, 149, 20))
        self.spc_wid_5.setObjectName("spc_wid_5")
        self.amp_interp_lyt.addWidget(self.spc_wid_6)
        self.amp_interp_l = QtWidgets.QLabel(self.centralwidget)
        self.amp_interp_l.setToolTip("")
        self.amp_interp_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.amp_interp_l.setObjectName("amp_interp_l")
        self.amp_interp_lyt.addWidget(self.amp_interp_l)
        self.amp_interp_cmb = QtWidgets.QComboBox(self.centralwidget)
        self.amp_interp_cmb.setObjectName("amp_interp_cmb")
        self.amp_interp_cmb.addItem("")
        self.amp_interp_cmb.addItem("")
        self.amp_interp_cmb.addItem("")
        self.amp_interp_lyt.addWidget(self.amp_interp_cmb)
        self.spc_wid_7 = QtWidgets.QWidget(self.centralwidget)
        self.spc_wid_7.setObjectName("spc_wid_7")
        self.spc_wid_8 = QtWidgets.QWidget(self.spc_wid_7)
        self.spc_wid_8.setGeometry(QtCore.QRect(140, 0, 149, 20))
        self.spc_wid_8.setObjectName("spc_wid_8")
        self.amp_interp_lyt.addWidget(self.spc_wid_7)
        self.verticalLayout.addLayout(self.amp_interp_lyt)
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout.addWidget(self.line_2)
        self.sampling_lyt = QtWidgets.QHBoxLayout()
        self.sampling_lyt.setObjectName("sampling_lyt")
        self.sampling_wid = QtWidgets.QWidget(self.centralwidget)
        self.sampling_wid.setObjectName("sampling_wid")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.sampling_wid)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.oversample_cb = QtWidgets.QCheckBox(self.sampling_wid)
        self.oversample_cb.setObjectName("oversample_cb")
        self.horizontalLayout_4.addWidget(self.oversample_cb)
        self.oversample_sb = QtWidgets.QSpinBox(self.sampling_wid)
        self.oversample_sb.setEnabled(False)
        self.oversample_sb.setFrame(False)
        self.oversample_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.oversample_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.oversample_sb.setMinimum(2)
        self.oversample_sb.setMaximum(4)
        self.oversample_sb.setObjectName("oversample_sb")
        self.horizontalLayout_4.addWidget(self.oversample_sb)
        self.target_sr_l = QtWidgets.QLabel(self.sampling_wid)
        self.target_sr_l.setMinimumSize(QtCore.QSize(48, 0))
        self.target_sr_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.target_sr_l.setObjectName("target_sr_l")
        self.horizontalLayout_4.addWidget(self.target_sr_l)
        self.target_sr_cmb = QtWidgets.QComboBox(self.sampling_wid)
        self.target_sr_cmb.setObjectName("target_sr_cmb")
        self.target_sr_cmb.addItem("")
        self.target_sr_cmb.addItem("")
        self.horizontalLayout_4.addWidget(self.target_sr_cmb)
        self.target_sr_sb = QtWidgets.QSpinBox(self.sampling_wid)
        self.target_sr_sb.setEnabled(False)
        self.target_sr_sb.setMinimumSize(QtCore.QSize(48, 0))
        self.target_sr_sb.setFrame(False)
        self.target_sr_sb.setAlignment(QtCore.Qt.AlignCenter)
        self.target_sr_sb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.target_sr_sb.setMinimum(8000)
        self.target_sr_sb.setMaximum(96000)
        self.target_sr_sb.setProperty("value", 48000)
        self.target_sr_sb.setObjectName("target_sr_sb")
        self.horizontalLayout_4.addWidget(self.target_sr_sb)
        self.sampling_lyt.addWidget(self.sampling_wid)
        self.verticalLayout.addLayout(self.sampling_lyt)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.transient_cues_l_2 = QtWidgets.QLabel(self.centralwidget)
        self.transient_cues_l_2.setObjectName("transient_cues_l_2")
        self.horizontalLayout.addWidget(self.transient_cues_l_2)
        self.spc_wid_4 = QtWidgets.QWidget(self.centralwidget)
        self.spc_wid_4.setObjectName("spc_wid_4")
        self.horizontalLayout.addWidget(self.spc_wid_4)
        self.fade_db_l = QtWidgets.QLabel(self.centralwidget)
        self.fade_db_l.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.fade_db_l.setObjectName("fade_db_l")
        self.horizontalLayout.addWidget(self.fade_db_l)
        self.fade_db_dsb = QtWidgets.QDoubleSpinBox(self.centralwidget)
        self.fade_db_dsb.setFrame(False)
        self.fade_db_dsb.setAlignment(QtCore.Qt.AlignCenter)
        self.fade_db_dsb.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.fade_db_dsb.setMinimum(-120.0)
        self.fade_db_dsb.setMaximum(0.0)
        self.fade_db_dsb.setSingleStep(0.1)
        self.fade_db_dsb.setProperty("value", -40.0)
        self.fade_db_dsb.setObjectName("fade_db_dsb")
        self.horizontalLayout.addWidget(self.fade_db_dsb)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.output_path_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_path_title_l.sizePolicy().hasHeightForWidth())
        self.output_path_title_l.setSizePolicy(sizePolicy)
        self.output_path_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.output_path_title_l.setStyleSheet("background-color: rgb(95, 144, 47);\n"
"color: rgb(255, 255, 255);")
        self.output_path_title_l.setObjectName("output_path_title_l")
        self.verticalLayout.addWidget(self.output_path_title_l)
        self.output_path_lyt = QtWidgets.QHBoxLayout()
        self.output_path_lyt.setObjectName("output_path_lyt")
        self.output_path_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output_path_l.sizePolicy().hasHeightForWidth())
        self.output_path_l.setSizePolicy(sizePolicy)
        self.output_path_l.setObjectName("output_path_l")
        self.output_path_lyt.addWidget(self.output_path_l)
        self.set_output_path_tb = QtWidgets.QToolButton(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.set_output_path_tb.setFont(font)
        self.set_output_path_tb.setObjectName("set_output_path_tb")
        self.output_path_lyt.addWidget(self.set_output_path_tb)
        self.verticalLayout.addLayout(self.output_path_lyt)
        self.settings_title_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.settings_title_l.sizePolicy().hasHeightForWidth())
        self.settings_title_l.setSizePolicy(sizePolicy)
        self.settings_title_l.setMinimumSize(QtCore.QSize(64, 0))
        self.settings_title_l.setStyleSheet("background-color: rgb(95, 144, 47);\n"
"color: rgb(255, 255, 255);")
        self.settings_title_l.setObjectName("settings_title_l")
        self.verticalLayout.addWidget(self.settings_title_l)
        self.file_settings_lyt = QtWidgets.QHBoxLayout()
        self.file_settings_lyt.setObjectName("file_settings_lyt")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setObjectName("label_2")
        self.file_settings_lyt.addWidget(self.label_2)
        self.format_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.format_cmb.sizePolicy().hasHeightForWidth())
        self.format_cmb.setSizePolicy(sizePolicy)
        self.format_cmb.setFrame(False)
        self.format_cmb.setObjectName("format_cmb")
        self.format_cmb.addItem("")
        self.format_cmb.addItem("")
        self.format_cmb.addItem("")
        self.file_settings_lyt.addWidget(self.format_cmb)
        self.bd_l = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bd_l.sizePolicy().hasHeightForWidth())
        self.bd_l.setSizePolicy(sizePolicy)
        self.bd_l.setObjectName("bd_l")
        self.file_settings_lyt.addWidget(self.bd_l)
        self.bitdepth_cmb = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bitdepth_cmb.sizePolicy().hasHeightForWidth())
        self.bitdepth_cmb.setSizePolicy(sizePolicy)
        self.bitdepth_cmb.setFrame(False)
        self.bitdepth_cmb.setObjectName("bitdepth_cmb")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.bitdepth_cmb.addItem("")
        self.file_settings_lyt.addWidget(self.bitdepth_cmb)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.file_settings_lyt.addItem(spacerItem)
        self.add_suffix_cb = QtWidgets.QCheckBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add_suffix_cb.sizePolicy().hasHeightForWidth())
        self.add_suffix_cb.setSizePolicy(sizePolicy)
        self.add_suffix_cb.setChecked(True)
        self.add_suffix_cb.setObjectName("add_suffix_cb")
        self.file_settings_lyt.addWidget(self.add_suffix_cb)
        self.suffix_le = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.suffix_le.sizePolicy().hasHeightForWidth())
        self.suffix_le.setSizePolicy(sizePolicy)
        self.suffix_le.setMaxLength(16)
        self.suffix_le.setFrame(False)
        self.suffix_le.setObjectName("suffix_le")
        self.file_settings_lyt.addWidget(self.suffix_le)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.file_settings_lyt.addItem(spacerItem1)
        self.no_overwriting_cb = QtWidgets.QCheckBox(self.centralwidget)
        self.no_overwriting_cb.setChecked(True)
        self.no_overwriting_cb.setObjectName("no_overwriting_cb")
        self.file_settings_lyt.addWidget(self.no_overwriting_cb)
        self.verticalLayout.addLayout(self.file_settings_lyt)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.buttons_lyt = QtWidgets.QGridLayout()
        self.buttons_lyt.setObjectName("buttons_lyt")
        self.process_sel_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_sel_pb.sizePolicy().hasHeightForWidth())
        self.process_sel_pb.setSizePolicy(sizePolicy)
        self.process_sel_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.process_sel_pb.setFont(font)
        self.process_sel_pb.setObjectName("process_sel_pb")
        self.buttons_lyt.addWidget(self.process_sel_pb, 0, 1, 1, 1)
        self.preview_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.preview_pb.sizePolicy().hasHeightForWidth())
        self.preview_pb.setSizePolicy(sizePolicy)
        self.preview_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.preview_pb.setFont(font)
        self.preview_pb.setObjectName("preview_pb")
        self.buttons_lyt.addWidget(self.preview_pb, 0, 0, 1, 1)
        self.process_pb = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_pb.sizePolicy().hasHeightForWidth())
        self.process_pb.setSizePolicy(sizePolicy)
        self.process_pb.setMinimumSize(QtCore.QSize(160, 0))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.process_pb.setFont(font)
        self.process_pb.setStyleSheet("QPushButton{background-color: rgb(95, 144, 47);color: rgb(255, 255, 255);}")
        self.process_pb.setDefault(False)
        self.process_pb.setObjectName("process_pb")
        self.buttons_lyt.addWidget(self.process_pb, 1, 1, 1, 1)
        self.verticalLayout.addLayout(self.buttons_lyt)
        self.progress_pb = QtWidgets.QProgressBar(self.centralwidget)
        self.progress_pb.setStyleSheet("QProgressBar{border: none;}")
        self.progress_pb.setProperty("value", 0)
        self.progress_pb.setAlignment(QtCore.Qt.AlignCenter)
        self.progress_pb.setTextVisible(False)
        self.progress_pb.setFormat("")
        self.progress_pb.setObjectName("progress_pb")
        self.verticalLayout.addWidget(self.progress_pb)
        mutate_tool_mw.setCentralWidget(self.centralwidget)

        self.retranslateUi(mutate_tool_mw)
        self.format_cmb.setCurrentIndex(0)
        self.bitdepth_cmb.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(mutate_tool_mw)

    def retranslateUi(self, mutate_tool_mw):
        _translate = QtCore.QCoreApplication.translate
        mutate_tool_mw.setWindowTitle(_translate("mutate_tool_mw", "Mutate Tool"))
        self.files_title_l.setText(_translate("mutate_tool_mw", "Input Files"))
        self.files_lw.setToolTip(_translate("mutate_tool_mw", "Drag and drop files or directories\n"
"Right click for context actions\n"
"Double-click to play"))
        self.set_files_tb.setToolTip(_translate("mutate_tool_mw", "Set files to process"))
        self.set_files_tb.setText(_translate("mutate_tool_mw", "..."))
        self.options_title_l.setText(_translate("mutate_tool_mw", "Options"))
        self.variants_l.setToolTip(_translate("mutate_tool_mw", "Input preprocessing"))
        self.variants_l.setText(_translate("mutate_tool_mw", "Variations"))
        self.count_l.setText(_translate("mutate_tool_mw", "Count"))
        self.count_sb.setToolTip(_translate("mutate_tool_mw", "Number of generated variants"))
        self.seed_l.setText(_translate("mutate_tool_mw", "Seed"))
        self.seed_mode_cmb.setToolTip(_translate("mutate_tool_mw", "name    use the file name as seed for the random generator\n"
"    each file will have a distinct randomization\n"
"value    specify a manual seed value\n"
"    all files will be randomized similarly"))
        self.seed_mode_cmb.setItemText(0, _translate("mutate_tool_mw", "name"))
        self.seed_mode_cmb.setItemText(1, _translate("mutate_tool_mw", "value"))
        self.seed_sb.setToolTip(_translate("mutate_tool_mw", "Seed of the random number generator\n"
"The seed is incremented for each variation"))
        self.input_l.setToolTip(_translate("mutate_tool_mw", "Input preprocessing"))
        self.input_l.setText(_translate("mutate_tool_mw", "Input"))
        self.multi_chn_cb.setToolTip(_translate("mutate_tool_mw", "Process in mono when unchecked"))
        self.multi_chn_cb.setText(_translate("mutate_tool_mw", "Mutichannel Processing"))
        self.trim_db_l.setText(_translate("mutate_tool_mw", "Trim dB"))
        self.trim_db_dsb.setToolTip(_translate("mutate_tool_mw", "Trim threshold in dB\n"
"Trim starting and ending silences from both input and output results"))
        self.transient_cues_l.setToolTip(_translate("mutate_tool_mw", "Transient cues detection settings\n"
"Randomization is then performed on each of these detected cues"))
        self.transient_cues_l.setText(_translate("mutate_tool_mw", "Transient Cues"))
        self.spc_wid.setToolTip(_translate("mutate_tool_mw", "Transient cues detection settings\n"
"Randomization is then performed on each of these detected cues"))
        self.min_dur_l.setText(_translate("mutate_tool_mw", "Min Duration"))
        self.min_dur_dsb.setToolTip(_translate("mutate_tool_mw", "Minimum duration between transient cues in seconds\n"
"A larger value decimates more cues leading to a smoother less chaotic result"))
        self.noise_tonal_l.setText(_translate("mutate_tool_mw", "Noise|Tonal Splitting"))
        self.stft_size_l.setText(_translate("mutate_tool_mw", "STFT size"))
        self.split_stft_sb.setToolTip(_translate("mutate_tool_mw", "Transient (lower) vs frequency (higher) precision trade-off"))
        self.iterations_l.setText(_translate("mutate_tool_mw", "Iterations"))
        self.iterations_sb.setToolTip(_translate("mutate_tool_mw", "Number of times the noise|tonal separation is repeated over itself\n"
"Separates noise from tonal content even more though it may sound more artificial"))
        self.end_mode_l.setText(_translate("mutate_tool_mw", "End Mode"))
        self.comboBox.setToolTip(_translate("mutate_tool_mw", "Define how the end boundary is padded to avoid STFT wrap-around\n"
"fade    fade end\n"
"loop    use sample loop information if present\n"
"extend    repeat last STFT time frame"))
        self.comboBox.setItemText(0, _translate("mutate_tool_mw", "fade"))
        self.comboBox.setItemText(1, _translate("mutate_tool_mw", "loop"))
        self.comboBox.setItemText(2, _translate("mutate_tool_mw", "extend"))
        self.noise_l.setToolTip(_translate("mutate_tool_mw", "Noise content parameters\n"
"This deals with the transients of the sound\n"
"Noise can typically bear with much more abuse than tonal content"))
        self.noise_l.setText(_translate("mutate_tool_mw", "Noise"))
        self.noise_amp_l.setToolTip(_translate("mutate_tool_mw", "Volume scaling"))
        self.noise_amp_l.setText(_translate("mutate_tool_mw", "Amp"))
        self.noise_rate_l.setToolTip(_translate("mutate_tool_mw", "Rate of the time stretching"))
        self.noise_rate_l.setText(_translate("mutate_tool_mw", "Rate"))
        self.noise_pitch_l.setToolTip(_translate("mutate_tool_mw", "Pitch shift (in semitones)"))
        self.noise_pitch_l.setText(_translate("mutate_tool_mw", "Pitch"))
        self.params_pb.setToolTip(_translate("mutate_tool_mw", "Constant parameters\n"
"Amp and Rate are multipliers\n"
"Pitch is an offset (in semitones)"))
        self.params_pb.setText(_translate("mutate_tool_mw", "Params"))
        self.random_pb.setToolTip(_translate("mutate_tool_mw", "Randomized parameters\n"
"Values represent the scale of the random generator"))
        self.random_pb.setText(_translate("mutate_tool_mw", "Random"))
        self.tonal_l.setToolTip(_translate("mutate_tool_mw", "Tonal content parameters\n"
"This deals with the \"body\" of the sound\n"
"Tonal content should typically not bear too much pitch variation"))
        self.tonal_l.setText(_translate("mutate_tool_mw", "Tonal"))
        self.tonal_amp_l.setToolTip(_translate("mutate_tool_mw", "Volume scaling"))
        self.tonal_amp_l.setText(_translate("mutate_tool_mw", "Amp"))
        self.tonal_rate_l.setToolTip(_translate("mutate_tool_mw", "Rate of the time stretching"))
        self.tonal_rate_l.setText(_translate("mutate_tool_mw", "Rate"))
        self.tonal_pitch_l.setToolTip(_translate("mutate_tool_mw", "Pitch shift (in semitones)"))
        self.tonal_pitch_l.setText(_translate("mutate_tool_mw", "Pitch"))
        self.match_cues_cb.setToolTip(_translate("mutate_tool_mw", "Scale tonal cues so tonal and noise end cues match, keeping overall length\n"
"When unchecked, noise and tonal content are more free to drift away from each other"))
        self.match_cues_cb.setText(_translate("mutate_tool_mw", "Match End Cues"))
        self.amp_interp_l.setText(_translate("mutate_tool_mw", "Amplitude Interpolation"))
        self.amp_interp_cmb.setToolTip(_translate("mutate_tool_mw", "Define which interpolation to use for the random amplitude cues\n"
"lnear    tame interpolation without overshoots\n"
"quadratic    smoother but with overshoots\n"
"cubic    even more continuous but with crazier overshoots"))
        self.amp_interp_cmb.setItemText(0, _translate("mutate_tool_mw", "linear"))
        self.amp_interp_cmb.setItemText(1, _translate("mutate_tool_mw", "quadratic"))
        self.amp_interp_cmb.setItemText(2, _translate("mutate_tool_mw", "cubic"))
        self.oversample_cb.setToolTip(_translate("mutate_tool_mw", "Enable oversampling for rate/pitch processing"))
        self.oversample_cb.setText(_translate("mutate_tool_mw", "Oversampling"))
        self.oversample_sb.setToolTip(_translate("mutate_tool_mw", "Oversampling Factor"))
        self.target_sr_l.setText(_translate("mutate_tool_mw", "Target Sampling Rate"))
        self.target_sr_cmb.setToolTip(_translate("mutate_tool_mw", "same    same sampling rate as input\n"
"custom    custom sampling rate"))
        self.target_sr_cmb.setItemText(0, _translate("mutate_tool_mw", "same"))
        self.target_sr_cmb.setItemText(1, _translate("mutate_tool_mw", "custom"))
        self.target_sr_sb.setToolTip(_translate("mutate_tool_mw", "Custom sampling rate used for resulting files"))
        self.transient_cues_l_2.setText(_translate("mutate_tool_mw", "Fade In/Out"))
        self.fade_db_l.setText(_translate("mutate_tool_mw", "Fade dB"))
        self.fade_db_dsb.setToolTip(_translate("mutate_tool_mw", "Fade threshold in dB\n"
"Apply micro log fades at start and end of resulting samples\n"
"when the volume falls under the given threshold, preventing clicks/pops"))
        self.output_path_title_l.setText(_translate("mutate_tool_mw", "Output Path"))
        self.output_path_l.setToolTip(_translate("mutate_tool_mw", "Output path"))
        self.set_output_path_tb.setToolTip(_translate("mutate_tool_mw", "Set output path\n"
"Process files in their respective directory if empty"))
        self.set_output_path_tb.setText(_translate("mutate_tool_mw", "..."))
        self.settings_title_l.setText(_translate("mutate_tool_mw", "File Settings"))
        self.label_2.setText(_translate("mutate_tool_mw", "Format"))
        self.format_cmb.setToolTip(_translate("mutate_tool_mw", "flac only allows integer format up to 24 bits\n"
"Use wav for 32 bits float"))
        self.format_cmb.setItemText(0, _translate("mutate_tool_mw", "same"))
        self.format_cmb.setItemText(1, _translate("mutate_tool_mw", "wav"))
        self.format_cmb.setItemText(2, _translate("mutate_tool_mw", "flac"))
        self.bd_l.setText(_translate("mutate_tool_mw", "Bit Depth"))
        self.bitdepth_cmb.setItemText(0, _translate("mutate_tool_mw", "same"))
        self.bitdepth_cmb.setItemText(1, _translate("mutate_tool_mw", "16"))
        self.bitdepth_cmb.setItemText(2, _translate("mutate_tool_mw", "24"))
        self.bitdepth_cmb.setItemText(3, _translate("mutate_tool_mw", "32"))
        self.add_suffix_cb.setText(_translate("mutate_tool_mw", "Add suffix"))
        self.suffix_le.setToolTip(_translate("mutate_tool_mw", "Suffix added to the base name"))
        self.suffix_le.setText(_translate("mutate_tool_mw", "_seq"))
        self.no_overwriting_cb.setToolTip(_translate("mutate_tool_mw", "Avoid overwriting original files by moving them to a backup directory"))
        self.no_overwriting_cb.setText(_translate("mutate_tool_mw", "Avoid Overwriting"))
        self.process_sel_pb.setToolTip(_translate("mutate_tool_mw", "Process selected item(s) with current settings"))
        self.process_sel_pb.setText(_translate("mutate_tool_mw", "Process Selected"))
        self.preview_pb.setToolTip(_translate("mutate_tool_mw", "Apply current settings to selected item\n"
"and play the result without writing anything"))
        self.preview_pb.setText(_translate("mutate_tool_mw", "Preview Selected"))
        self.process_pb.setToolTip(_translate("mutate_tool_mw", "Process all input files with current settings"))
        self.process_pb.setText(_translate("mutate_tool_mw", "Batch Process"))
